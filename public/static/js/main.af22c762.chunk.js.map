{"version":3,"sources":["api.js","Components/LoginButton.js","Layout/Header.js","Layout/Sidebar.js","Layout/Footer.js","Components/Login.js","Components/Student/CountCard.js","Components/Student/ExamCard.js","Components/Student/StudHome.js","Components/Student/Instructions.js","Components/Exam/Options.js","Components/Exam/QuestionAnswer.js","Components/Exam/QuestionButtons.js","Components/Exam/NextSaveButton.js","Components/Exam/OverallSummery.js","Components/Exam/EndExamButton.js","Components/Exam/PreviousButton.js","Components/Exam/ReviewLater.js","Components/Exam/MyTimer.js","Components/Startexam.js","Layout/Content.js","AlertDismissible.js","App.js","index.js"],"names":["axios","create","baseURL","process","LoginButton","props","history","useHistory","a","label","API","post","data","status","localStorage","clear","setIsLoggedIn","replace","onClick","loginLogout","className","Header","useContext","ShowContext","setShow","setMsg","location","useLocation","useState","toggle","setToggle","isLoggedIn","isStartExam","setIsStartExam","useEffect","PathName","pathname","searchString","split","find","str","document","body","classList","add","remove","href","id","toggleSidebar","type","placeholder","aria-label","aria-describedby","url","Sidebar","Footer","Login","flag","setFlag","myRecaptcha","setMyRecaptcha","myMsg","setMyMsg","updateFlag","undefined","initialValues","username","password","instId","onSubmit","values","setSubmitting","checkLogin","validationSchema","Yup","shape","required","when","is","then","touched","errors","isSubmitting","handleChange","handleBlur","handleSubmit","value","userame","onChange","onBlur","class1name","name","sitekey","disabled","res","setItem","JSON","stringify","token","message","get","params","CountCard","style","fontSize","color","count","getTimezoneName","today","Date","short","toLocaleDateString","full","timeZoneName","shortIndex","indexOf","substring","length","ExamCard","StartTime","EndTime","TotalQuestions","ExamDuration","Now","BtnCaption","Theme","BtnTheme","myLink","exam","paper","from_date","to_date","now","examstatus","PaperName","paper_name","questions","duration","to","e","preventDefault","state","userRequest","btnCaption","paperName","startTime","endTime","totQuestions","examDuration","theme","btnTheme","minHeight","margin","format","Intl","DateTimeFormat","resolvedOptions","timeZone","StudHome","loading","myExams","numExams","compExams","yetToStartExam","resumeExam","expiredExam","setUserRequest","exams","unsortedData","sorted","sort","b","compleated","yetToStart","resume","expired","Object","keys","forEach","key","map","setStartexam","examDetails","startMyExam","getQuestions","myQuestions","currentQuestionIndex","solvedQuestionIndexes","getIndexes","unsolvedQuestionIndexes","markedSolvedIndexes","markedUnsolvedIndexes","ExamId","put","arr","question","index","answered","push","Instructions","checked","setChecked","startexam","setExam","myExam","useOptions","BtnLabel","negativeMarks","negative_marks","defaultChecked","ExamStart","verifyOption","questionIndex","selectedOptions","optType","Options","isOpen","setIsOpen","opt","optImg","opt_path","optimage","setMyOption","math","mainSrc","onCloseRequest","src","alt","QuestionAnswer","question_path","qu_fig","qnid_sr","height","overflow","optiona","a1","qu","optionb","a2","optionc","a3","optiond","a4","getColor","myIndex","qa","QuestionButtons","qas","float","width","examDetailsButtons","changeIndex","maxQuestions","myOption","curOptionStatus","answerId","newOptionStatus","myUnsolvedQuestionIndexes","mySolvedQuestionIndexes","myMarkedUnsolvedIndexes","myMarkedSolvedIndexes","filter","item","catch","error","response","NextSaveButton","islast","setIslast","parseInt","console","log","saveAndChangeIndex","OverallSummery","marginTop","marginBottom","EndExamButton","isLast","setIsLast","show","handleClose","Modal","onHide","size","Body","Button","variant","handleEndExam","PreviousButton","isfirst","setIsfirst","reviewVal","setCheckValue","checkValue","origAnswerType","newAnswerType","ReviewLater","myReviewArray","myReviewQuestions","toggleReview","setTimer","examId","timerData","elapsedTime","MyTimer","timer","getTimer","myInterval","setInterval","manageExamSession","clearInterval","hideDay","backgroundColor","onEnd","evt","currentTarget","myParameter","total_allowable_alerts","exam_switch_alerts","myHistory","switchedcount","alert","cnt","Startexam","originalSelectedOptions","stdanswer","getSelectedOptions","array","getReviewOptions","setSelectedOptions","prev","window","addEventListener","removeEventListener","Content","exact","path","component","AlertDismissible","myShow","Alert","onClose","mySetShow","dismissible","position","top","left","zIndex","React","createContext","browserHistory","createBrowserHistory","App","msg","interceptors","request","use","config","parse","getItem","headers","Promise","reject","setupAxios","Provider","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.af22c762.chunk.js","sourcesContent":["import axios from 'axios';\n\nconst serverPath = process.env.REACT_APP_SERVER_PROJPATH;\n\nexport default axios.create({\n  baseURL: serverPath\n});\n","import React from 'react';\nimport API from '../api';\nimport { useHistory } from 'react-router-dom';\n\nfunction LoginButton(props)\n{\n  let history = useHistory(props);\n\n  async function loginLogout()\n  {\n    if(props.label === 'Logout')\n    {\n      //-----------Call Logout API and on success redirect to Login Page-------\n\n      const res = await API.post('/logout');\n\n      if(res.data.status === 'Success')\n      {\n        await localStorage.clear();\n        props.setIsLoggedIn(false);\n        history.replace('/login');\n      }\n      //-----------------------------------------------------------------------\n    }\n    else\n    {\n        history.replace('/login');\n    }\n  }\n\n    return (\n        <div>\n          <button onClick={() => {loginLogout(props)}} className=\"btn btn-primary\">{props.label}</button>\n        </div>\n    );\n}\n\nexport default LoginButton;\n","import React, { useState , useEffect, useContext } from 'react';\nimport LoginButton from '../Components/LoginButton';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport {ShowContext} from '../App';\n\n\nfunction Header()\n{\n    const {setShow,setMsg} = useContext(ShowContext);\n\n    let history                         =   useHistory();\n    let location                        =   useLocation();\n    let [toggle, setToggle]             =   useState(true);\n    let [isLoggedIn, setIsLoggedIn]     =   useState(false);\n    let [isStartExam, setIsStartExam]   =   useState(false);\n\n    useEffect(() =>\n    {\n      let PathName = location.pathname;\n      const searchString = process.env.REACT_APP_NON_AUTH_PATHS.split(' ').find((str) => str === PathName);\n      if(PathName==='/startexam')\n      {\n        setIsStartExam(true);\n        setToggle(true);\n        document.body.classList.add('sb-sidenav-toggled');document.body.classList.remove('sb-nav-fixed');\n      }\n      else\n      {\n        setIsStartExam(false);\n        setToggle(false);\n        document.body.classList.add('sb-nav-fixed');document.body.classList.remove('sb-sidenav-toggled');\n      }\n      if(PathName!==searchString)\n      {\n          setIsLoggedIn(true);\n      }\n      else\n      {\n          setIsLoggedIn(false);\n      }\n    },[location,history,setShow,setMsg]);\n\n\n    return(\n          !isStartExam ?\n            <nav className=\"sb-topnav navbar navbar-expand navbar-dark bg-dark\">\n                <a className=\"navbar-brand\" href={void(0)}>GudExams</a>\n                <button className=\"btn btn-link btn-sm order-1 order-lg-0\" id=\"sidebarToggle\" onClick={() => {toggleSidebar(setToggle,toggle)}}><i className=\"fas fa-bars\"></i></button>\n\n                <form className=\"d-none d-md-inline-block form-inline ml-auto mr-0 mr-md-3 my-2 my-md-0\">\n                    <div className=\"input-group\">\n                        <input className=\"form-control\" type=\"text\" placeholder=\"Search for...\" aria-label=\"Search\" aria-describedby=\"basic-addon2\" />\n                        <div className=\"input-group-append\">\n                            <button className=\"btn btn-primary\" type=\"button\"><i className=\"fas fa-search\"></i></button>\n                        </div>\n                    </div>\n                </form>\n                { isLoggedIn ? <LoginButton url={'/logout'} label={'Logout'} setIsLoggedIn={setIsLoggedIn}/>: <LoginButton url={'/login'} label={'Login'}/>}\n            </nav>\n            : null\n    );\n}\n\nfunction toggleSidebar(setToggle,toggle)\n{\n    setToggle(!toggle);\n    if(!toggle)\n    {\n        document.body.classList.add('sb-sidenav-toggled');document.body.classList.remove('sb-nav-fixed');\n    }\n    else\n    {\n        document.body.classList.add('sb-nav-fixed');document.body.classList.remove('sb-sidenav-toggled');\n    }\n}\n\nexport default Header;\n","import React from 'react';\nfunction Sidebar() {\n        return (\n                    <nav className=\"sb-sidenav accordion sb-sidenav-dark\" id=\"sidenavAccordion\" >\n                        <div className=\"sb-sidenav-menu\">\n                            <div className=\"nav\">\n                                <div className=\"sb-sidenav-menu-heading\">Menu</div>\n                                <a className=\"nav-link\" href=\"/\">\n                                    <div className=\"sb-nav-link-icon\"><i className=\"fas fa-tachometer-alt\"></i></div>\n                                    Home\n                                </a>\n                            </div>\n                        </div>\n                    </nav>\n        );\n}\n\nexport default Sidebar;","import React from 'react';\n\nfunction Footer() {\n        return (\n            <div className=\"container-fluid\">\n                <div className=\"d-flex align-items-center justify-content-between small\">\n                    <div className=\"text-muted\">Copyright &copy; Your Website 2020</div>\n                    <div>\n                        <a href=\"_blank\">Privacy Policy</a>&middot;<a href=\"_blank\">Terms &amp; Conditions</a>\n                    </div>\n                </div>\n            </div>\n        );\n}\n\nexport default Footer;\n","import React, { useState , useEffect } from 'react';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport API from '../api';\nimport ReCAPTCHA   from \"react-google-recaptcha\";\nimport { useHistory } from 'react-router-dom';\n\nexport default function Login(props)\n{\n  let history = useHistory();\n  const [flag, setFlag]                           =   useState();\n  const [myRecaptcha, setMyRecaptcha]             =   useState();\n  const [myMsg, setMyMsg]                         =   useState();\n\n  useEffect(() => updateFlag(setFlag), []);\n\n  return (\n    flag !== undefined && <Formik\n        initialValues={{ username: \"\", password: \"\", flag:flag ,instId:\"\" }}\n        onSubmit={(values,{ setSubmitting }) =>\n        {\n          if (myRecaptcha !== undefined){\n            checkLogin(values.username,values.password,values.instId,flag,myRecaptcha,setMyMsg,history);\n          }\n        }}\n        validationSchema={Yup.object().shape({\n            username:Yup.string()\n            .required(\"Username Required\"),\n            password: Yup.string()\n            .required(\"Password is Required\"),\n            flag: Yup.number(),\n            instId: Yup.string().when('flag', {\n              is:0,\n              then: Yup.string().required(\"Inst ID is Required\")\n            })\n        })}\n    >\n    {\n        props => {\n            const {\n                values,\n                touched,\n                errors,\n                isSubmitting,\n                handleChange,\n                handleBlur,\n                handleSubmit\n            } = props;\n            return (\n\n                <div>\n                    <div className=\"container\">\n                        <div className=\"row justify-content-center\">\n                            <div className=\"col-lg-5\">\n                                <div className=\"card shadow-lg border-0 rounded-lg mt-5\">\n                                    <div className=\"card-header\"><h3 className=\"text-center font-weight-light my-4\">GudExams Login</h3></div>\n                                    <div className=\"card-body\" >\n                                        <form onSubmit={handleSubmit}>\n                                            <div className=\"form-group\">\n                                                <label>User Name</label>\n\n                                                <input className=\"form-control py-4\" id=\"username\" type=\"text\"\n                                                value ={values.userame}\n                                                placeholder=\"Enter User Name\"\n                                                onChange={handleChange}\n                                                onBlur={handleBlur}\n                                                class1name={errors.username && touched.username && \"error\"}\n                                                />\n\n                                                {errors.username && touched.username && (\n                                                    <div className=\"alert alert-info\">{errors.username}</div>\n                                                )}\n\n                                            </div>\n                                            <div className=\"form-group\">\n                                                <label className=\"form-group\">Password</label>\n\n                                                <input className=\"form-control py-4\" id=\"password\" type=\"password\"\n                                                value ={values.password}\n                                                placeholder=\"Enter password\"\n                                                onChange={handleChange}\n                                                onBlur={handleBlur}\n                                                class1name={errors.password && touched.password && \"error\"}\n                                                />\n\n                                                {errors.password && touched.password && (\n                                                    <div className=\"alert alert-info\">{errors.password}</div>\n                                                )}\n                                            </div>\n\n                                            {flag === 0 && (<div className=\"form-group\">\n                                                <label className=\"form-group\">Inst ID</label>\n\n                                                <input className=\"form-control py-4\" id=\"instId\" type=\"instId\"\n                                                value ={values.instId}\n                                                placeholder=\"Enter Institute ID\"\n                                                onChange={handleChange}\n                                                onBlur={handleBlur}\n                                                class1name={errors.instId && touched.instId && \"error\"}\n                                                />\n\n                                                {errors.instId && touched.instId && (\n                                                    <div className=\"alert alert-info\">{errors.instId}</div>\n                                                )}\n                                            </div>)}\n\n                                            <ReCAPTCHA name=\"myRecaptcha\" id=\"myRecaptcha\" sitekey=\"6Lcq1t4ZAAAAAKJJI5QBF89XGNTDBIAODpcaJgOo\" onChange={(value) => setMyRecaptcha(value)}/>\n\n                                            <div className=\"form-group d-flex align-items-center justify-content-between mt-4 mb-0\">\n                                                <button className=\"btn btn-primary\" type=\"submit\" id=\"submit\" disabled={isSubmitting}>Login</button>\n                                            </div><br/>\n\n                                            {myMsg !== undefined && (\n                                                <div className=\"alert alert-success\">{myMsg}</div>\n                                            )}\n\n                                        </form>\n                                    </div>\n                                    <div className=\"card-footer text-center\">\n                                        <div className=\"small\"><a href=\"/register\">Need an account? Sign up!</a></div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                      </div>\n                </div>\n            );\n        }\n    }\n    </Formik>\n  );\n}\n\nasync function checkLogin(username,password,instId,flag,myRecaptcha,setMyMsg,history)\n{\n    await API.post('/login',{\"username\":username,\"password\":password,\"inst_id\":instId,\"flag\":flag,\"myRecaptcha\":myRecaptcha}).then(res =>\n    {\n            if(res.data.status === 'success')\n            {\n                localStorage.setItem(\"token\",JSON.stringify(res.data.token));\n                history.replace('/studenthome');\n            }\n            else\n            {\n                setMyMsg(res.data.message);\n            }\n    })\n}\n\nasync function updateFlag(setFlag)\n{\n  const res = await API.get('/settings',{params: {\"type\":\"login\"}});\n  if(res.data.status==='success')\n  {\n      setFlag(res.data.flag);\n  }\n}\n","import React  from 'react';\n\nfunction CountCard(props)\n{\n    return (\n        <div className=\"col-lg-2\" style={{fontSize: \"10px\"}}>\n          <center>\n            <button type=\"button\" className={'btn btn-'+props.color}>{props.count}</button>\n          </center>\n          <center>{props.label}</center>\n        </div>\n    );\n}\n\nexport default CountCard;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport Moment from 'react-moment';\n\nfunction ExamCard(props)\n{\n    let BtnCaption      = '';\n    let StartTime       = '';\n    let EndTime         = '';\n    let TotalQuestions  = 0;\n    let ExamDuration    = 0;\n    let Theme           = '';\n    let BtnTheme        = '';\n    let myLink          = '';\n    let Now             = '';\n    let status          = '';\n\n    StartTime         = props.exam.paper.from_date;\n    EndTime           = props.exam.paper.to_date;\n    Now               = props.exam.now;\n    //----------------------Dynamic status------------------------------------------\n      if(EndTime < Now)\n      {\n        status='expired';\n      }\n      else if(props.exam.examstatus==='inprogress')\n      {\n        status = 'inprogress';\n      }\n    //------------------------------------------------------------------------------\n    if(props.exam.examstatus==='over')\n    {\n      status        = props.exam.examstatus;\n    }\n    const PaperName   = props.exam.paper.paper_name;\n    TotalQuestions    = props.exam.paper.questions;\n    ExamDuration      = props.exam.paper.duration;\n\n\n    //---------------------Status according to database-------------------------\n\n    if(status === 'over' || status  === 'expired')\n    {\n      if(status ==='over')\n      {\n        BtnCaption='Completed';\n        Theme = 'text-white bg-success'\n        BtnTheme = 'btn btn-secondary';\n      }\n      else\n      {\n        BtnCaption='Expired';\n        Theme = 'bg-danger';\n        BtnTheme = 'btn btn-danger';\n      }\n      myLink = <Link to={void(0)} className={BtnTheme} onClick={e => e.preventDefault()}>{BtnCaption}</Link>\n    }\n    else if(status==='' || status ==='inprogress')\n    {\n      if(status ==='')\n      {\n        BtnCaption='Start Exam';\n        Theme = 'text-white bg-dark';\n        BtnTheme = 'btn btn-primary';\n        if(StartTime > Now)\n        {\n          BtnCaption='Coming Soon';\n          Theme = 'bg-warning';\n          BtnTheme = 'btn btn-warning';\n\n          myLink = <Link to={void(0)} className={BtnTheme}>{BtnCaption}</Link>;\n        }\n        else\n        {\n          myLink = <Link to={{pathname: '/instructions',state: props.exam }} className={BtnTheme}>{BtnCaption}</Link>;\n        }\n      }\n      else\n      {\n        BtnCaption='Continue Exam';\n        Theme = 'text-white bg-primary';\n        BtnTheme = 'btn btn-success';\n        myLink = <Link to={{pathname: '/instructions',state: props.exam }} className={BtnTheme}>{BtnCaption}</Link>;\n      }\n    }\n//------------------------------------------------------------------------------\n    const userRequest = { btnCaption:BtnCaption, paperName:PaperName, startTime:StartTime,  endTime:EndTime, totQuestions:TotalQuestions, examDuration:ExamDuration, theme:Theme, btnTheme:BtnTheme }\n    return (\n            <div className=\"col-lg-4\">\n              <div className='card' style={{minHeight:\"400px\",margin:\"10px\"}}>\n                  <div className={\"card-header \"+userRequest.theme}>\n                    <b>{userRequest.paperName}</b>\n                  </div>\n                  <div className=\"card-body\">\n                    <h6 className=\"card-title\"><b>Exam Details</b></h6>\n                    <ul>\n                        <li>Start Time      : <Moment format=\"MMMM Do YYYY, H:mm:ss A\">{userRequest.startTime}</Moment></li>\n                        <li>End Time        : <Moment format=\"MMMM Do YYYY, H:mm:ss A\">{userRequest.endTime}</Moment></li>\n                        <li>Time Zone: {getTimezoneName()} {Intl.DateTimeFormat().resolvedOptions().timeZone}</li>\n                        <li>No of Questions : {userRequest.totQuestions}</li>\n                        <li>Exam Duration   : {userRequest.examDuration}</li>\n                    </ul>\n                  </div>\n                  <div className=\"card-footer\">\n                    <center>\n                      {myLink}\n                    </center>\n                  </div>\n              </div>\n            </div>\n    );\n}\n\nfunction getTimezoneName()\n{\n  const today         = new Date();\n  const short         = today.toLocaleDateString(undefined);\n  const full          = today.toLocaleDateString(undefined, { timeZoneName: 'long' });\n  const shortIndex    = full.indexOf(short);\n  if (shortIndex >= 0)\n  {\n    const trimmed     = full.substring(0, shortIndex) + full.substring(shortIndex + short.length);\n    return trimmed.replace(/^[\\s,.\\-:;]+|[\\s,.\\-:;]+$/g, '');\n  }\n  else\n  {\n    return full;\n  }\n}\n\nexport default ExamCard;\n","import React, { useState , useEffect } from 'react';\nimport API from '../../api';\nimport CountCard from './CountCard';\nimport ExamCard from './ExamCard';\n\nfunction StudHome()\n{\n  const [userRequest, setUserRequest] = useState({\n    loading: true,\n    myExams: null,\n    numExams:0,\n    compExams:0,\n    yetToStartExam:0,\n    resumeExam:0,\n    expiredExam:0\n  });\n  useEffect(() =>\n  {\n    (async function anyNameFunction()\n    {\n\n        const res = await API.get('/exam');\n        const exams = await res.data;\n\n        //-------------------Sort data according to exam date for cards---------\n        let unsortedData= exams.data;\n        let sorted = {};\n        sorted = unsortedData.sort(function(a,b)\n        {\n          return a.paper.from_date - b.paper.from_date;\n        });\n        //----------------------------------------------------------------------\n\n        let compleated = 0;\n        let yetToStart = 0;\n        let resume     = 0;\n        let expired    = 0;\n        let EndTime    = '';\n        let Now        = '';\n\n        Object.keys(sorted).forEach(function(key)\n        {\n          EndTime           = sorted[key].paper.to_date;\n          Now               = sorted[key].now;\n\n          if(sorted[key].examstatus === 'over')\n          {\n            compleated = compleated+1;\n          }\n          else if(sorted[key].examstatus === '')\n          {\n            if(EndTime < Now)\n            {\n              expired = expired+1;\n            }\n            else\n            {\n              yetToStart = yetToStart+1;\n            }\n          }\n          else if(sorted[key].examstatus === 'inprogress')\n          {\n            if(EndTime < Now)\n            {\n              expired = expired+1;\n            }\n            else\n            {\n              resume = resume+1;\n            }\n          }\n          else if(sorted[key].examstatus === 'expired')\n          {\n            expired = expired+1;\n          }\n        });\n        //---------------------------------------------------------------------\n        setUserRequest({ loading:false, myExams:exams, numExams:exams.data.length,  compExams:compleated, yetToStartExam:yetToStart, resumeExam:resume, expiredExam:expired });\n    })();\n  },[]);\n\n    return (\n      !userRequest.loading ?\n      <div>\n        <div className=\"container-fluid\">\n            <h1 className=\"mt-4\">Student Home</h1>\n            <ol className=\"breadcrumb mb-4\">\n                <li className=\"breadcrumb-item active\">Student Home</li>\n            </ol>\n            <div className=\"row col-lg-12\">\n              <CountCard count={userRequest.numExams} label={\"All\"} color={\"danger\"}/>\n              <CountCard count={userRequest.compExams} label={\"Compleated\"} color={\"success\"}/>\n              <CountCard count={userRequest.yetToStartExam} label={\"Yet To Start\"} color={\"warning\"}/>\n              <CountCard count={userRequest.resumeExam} label={\"Resume\"} color={\"primary\"}/>\n              <CountCard count={userRequest.expiredExam} label={\"Expired\"} color={\"info\"}/>\n            </div>\n            <br/><br/>\n            <div className=\"row col-lg-12\">\n            {\n              userRequest.myExams ? userRequest.myExams.data.map((exam) =>\n              (\n                  <ExamCard exam={exam} key={exam.id}/>\n              )) : null\n            }\n            </div><br/>\n        </div>\n      </div> : ''\n    );\n}\n\nexport default StudHome;\n","import React ,{ useState, useEffect }  from 'react';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport API from '../../api';\n\nfunction useOptions()\n{\n  let history                           =   useHistory();\n  let location                          =   useLocation();\n  let [exam, setExam]                   =   useState();\n  let myExam                            =   undefined;\n\n  if(location.state)\n  {\n    myExam = location.state;\n  }\n  useEffect(() =>\n  {\n    if (myExam)\n    {\n      setExam(myExam);\n    }\n    else\n    {\n      history.replace(\"/studenthome\");\n    }\n  }, [myExam,history]);\n\n  return exam;\n}\n\nfunction Instructions(props)\n{\n  const [checked, setChecked]         =   useState(false);\n  const [startexam, setStartexam]     =   useState(true);\n  let history                         =   useHistory();\n  let exam                            =   useOptions();\n\n  let button = '';\n  let BtnLabel = '';\n  let  negativeMarks='';\n  if(exam)\n  {\n        if(exam.examstatus==='inprogress')\n        {\n          BtnLabel = 'Continue Exam';\n        }\n        else\n        {\n          BtnLabel = 'Start Exam';\n        }\n\n        exam.paper.negative_marks===0 ?negativeMarks = 'No' : negativeMarks = 'Yes';\n  }\n\n  return (\n      exam ?\n      <div>\n        <div className=\"container-fluid\">\n            <h1 className=\"mt-4\">Exam Instructions</h1>\n            <ol className=\"breadcrumb mb-4\">\n                <li className=\"breadcrumb-item active\">Read Instructions Carefully...</li>\n            </ol>\n            <div className=\"col-lg-12\">\n                  <div className='card'>\n                      <div className=\"card-header bg-primary\" style={{color:\"white\"}}>\n                        <h5><b>{exam.paper.paper_name} Instructions</b></h5>\n                      </div>\n                      <div className=\"card-body\">\n                        <ul>\n                          <li> Welcome to Online Exam for {exam.paper.paper_name}</li>\n                          <li> Exam has total {exam.paper.questions} Questions</li>\n                          <li> Total time for Exam is {exam.paper.duration} Mins</li>\n                          <li> Negative Marking Exam: <b>{negativeMarks}</b></li>\n                        </ul>\n\n                        <h1><i>Best of Luck for your Exam</i></h1>\n                      </div>\n                      <div className=\"card-footer\">\n                        <center>\n                            <input type=\"checkbox\" id=\"read\" name=\"read\" defaultChecked={checked} onChange={() => setChecked(!checked)} /> &nbsp;&nbsp;I have read and understood instructions.<br/><br/>\n                            <button disabled={!checked} onClick={() => ExamStart(history,exam,setStartexam)} className=\"btn btn-success\">{BtnLabel}</button>\n                        </center>\n                      </div>\n                  </div>\n            </div>\n            <br/>\n            <div>{!startexam && (\n                <div className=\"alert alert-info\">Problem Starting Examination</div>\n            )}</div>\n        </div>\n      </div> : ''\n    );\n}\n\nasync function ExamStart(history,exam,setStartexam)\n{\n  let examDetails = {}\n  //------------------Start Exam------------------------------------------------\n    if(await startMyExam(exam))\n    {\n        const myQuestions = await getQuestions(exam);\n        if(myQuestions)\n        {\n          examDetails = {\n          exam: exam,\n          questions: myQuestions,\n          currentQuestionIndex: 0,\n          solvedQuestionIndexes              :  getIndexes(myQuestions,'answered'), unsolvedQuestionIndexes            :  getIndexes(myQuestions,'unanswered'),\n          markedSolvedIndexes                :  getIndexes(myQuestions,'answeredandreview'),\n          markedUnsolvedIndexes              :  getIndexes(myQuestions,'unansweredandreview'),\n        }\n        setStartexam(true);\n        history.replace(\"/startexam\", examDetails) ;\n      }\n    }\n    else\n    {\n      setStartexam(false);\n    }\n  //----------------------------------------------------------------------------\n}\n\nasync function startMyExam(exam)\n{\n  const ExamId = exam.id;\n\n  const res = await API.put('/exam/'+ExamId,{\"status\": \"start\"});\n\n  if(res.data.status === 'success')\n  {\n    return 1;\n  }\n  else\n  {\n    return 0;\n  }\n}\n\nasync function getQuestions(exam)\n{\n  const ExamId = exam.id;\n\n  const res = await API.get('/answer',{params: {\"exam_id\": ExamId}});\n  if(res.data.status === 'success')\n  {\n    return res.data.data;\n  }\n  else\n  {\n    return null;\n  }\n}\n\nfunction getIndexes(myQuestions,searchString)\n{\n  let arr     = [];\n\n  myQuestions.forEach(function(question,index){\n    if(question.answered === searchString)\n    {\n      arr.push(index);\n    }\n  });\n  return arr;\n}\n\nexport default Instructions;\n","import React, {useState} from 'react';\nimport MathJax from 'react-mathjax-preview';\nimport Lightbox from 'react-image-lightbox';\nimport 'react-image-lightbox/style.css';\n\n\nfunction Options(props) {\n    const [isOpen, setIsOpen]     = useState(false);\n    const projpath                =   process.env.REACT_APP_PROJPATH;\n    let opt                       =   '';\n    let optType                   =   '';\n    let optImg                    =   '';\n    let opt_path                  =   '';\n\n    const questionIndex           =   props.data.questions.location.state.currentQuestionIndex;\n    const selectedOptions         =   props.selectedOptions;\n\n    if(props.opt)\n    {\n      opt                         =   props.opt.split(':$:')[0];\n      optType                     =   props.opt.split(':$:')[1];\n    }\n    if(props.optimage)\n    {\n       optImg                      =   props.optimage.split(':$:')[0];\n       optType                     =   props.optimage.split(':$:')[1];\n       opt_path                    =   projpath+\"\"+optImg;\n    }\n\n    return (\n          <div className=\"col-lg-12 row\">\n            <div className=\"col-lg-1\">\n              <input checked={verifyOption(questionIndex, selectedOptions, optType)} type=\"radio\" name=\"option\"  value={optType} onChange={() => {\n              props.setMyOption(optType);\n            }} />\n            </div>\n            <div className=\"col-lg-11\">\n              <MathJax math={opt} />\n            </div>\n            {isOpen && (<Lightbox\n              mainSrc={opt_path}\n              onCloseRequest={() => setIsOpen(false)}\n              />\n            )}\n            <img src={opt_path} alt=\"\" onClick={() => setIsOpen(true)}/>\n          </div>\n    );\n}\n\nfunction verifyOption(questionIndex, selectedOptions, optType){\n  return selectedOptions[questionIndex] === optType;\n}\n\nexport default Options;\n","import React, {useState} from 'react';\nimport Options from \"./Options\";\nimport MathJax from 'react-mathjax-preview';\nimport Lightbox from 'react-image-lightbox';\nimport 'react-image-lightbox/style.css';\n\nfunction QuestionAnswer(props) {\n  const questions             = props.questions.location.state.questions;\n  const index                 = props.questions.location.state.currentQuestionIndex;\n  const [isOpen, setIsOpen]   = useState(false);\n\n  //------------------------------Question Variables----------------------------\n  let  question       =   '';\n  const projpath      =   process.env.REACT_APP_PROJPATH;\n  let question_path   =  '';\n  //----------------------------------------------------------------------------\n\n  if(!questions[index].question.qu_fig)\n  {\n    question = questions[index].question.question;\n  }\n  else\n  {\n    question = questions[index].question.question;\n    question_path = projpath+\"\"+questions[index].question.qu_fig;\n  }\n\n  return (\n          <div className=\"col-lg-12 row\">\n            <div className=\"col-lg-12\">\n              <b>Question {questions[index].qnid_sr}:</b>\n            </div>\n            <div className=\"col-lg-12\" style={{height:\"200px\", overflow:\"auto\"}}>\n                <MathJax math={question} />\n                <br/>\n                {isOpen && (<Lightbox\n                  mainSrc={question_path}\n                  onCloseRequest={() => setIsOpen(false)}\n                  />\n                )}\n              <img src={question_path} alt=\"\" onClick={() => setIsOpen(true)}/>\n            </div>\n\n            <div className=\"col-lg-12\">\n              <hr/>\n            </div>\n\n            <div className=\"col-lg-12\" style={{height:\"190px\", overflow:\"auto\"}}>\n\n              <Options id=\"optiona\" opt={questions[index].question.optiona} optimage={questions[index].question.a1} qu={questions[index]} setMyOption={props.setMyOption} data={props} selectedOptions={props.selectedOptions} />\n\n              <Options id=\"optionb\" opt={questions[index].question.optionb} optimage={questions[index].question.a2} qu={questions[index]} setMyOption={props.setMyOption} data={props} selectedOptions={props.selectedOptions} />\n\n              <Options id=\"optionc\" opt={questions[index].question.optionc} optimage={questions[index].question.a3} qu={questions[index]} setMyOption={props.setMyOption} data={props} selectedOptions={props.selectedOptions} />\n\n              <Options id=\"optiond\" opt={questions[index].question.optiond} optimage={questions[index].question.a4} qu={questions[index]} setMyOption={props.setMyOption} data={props} selectedOptions={props.selectedOptions} />\n\n            </div>\n          </div>\n  );\n}\n\nexport default QuestionAnswer;\n","import React from 'react';\nimport { useHistory } from 'react-router-dom';\n\nfunction QuestionButtons(props) {\n  const qas           = props.qas.location.state.questions;\n  const myIndex       = props.qas.location.state.currentQuestionIndex;\n  let history         =   useHistory();\n        return (\n          <div className=\"col-lg-12\" style={{float: \"right\"}}>\n              <div className='card col-lg-12'>\n                  <div className=\"card-header bg-primary row\" style={{color:\"white\"}}>\n                    <div className=\"col-lg-12\">\n                      <h6><b><center>Questions</center></b></h6>\n                    </div>\n                  </div>\n                  <div className=\"card-body col-lg-12 row\" style={{float:\"right\" ,width:\"350px\"}}>\n                    {qas.map((qa,index) => (\n                      <div className=\"col-lg-2\" key={qa.qnid_sr} style={{margin:\"2px\"}}>\n\n                          <input type=\"button\" className={getColor(index,myIndex,qa)} value={qa.qnid_sr}  style={{margin:\"2px\"}} onClick={() => {changeIndex(props,index,history)}}/>\n\n                      </div>\n                    ))}\n                  </div>\n              </div>\n            </div>\n        );\n}\n\nfunction changeIndex(props,index,history)\n{\n  const examDetailsButtons = {\n    exam                               :  props.qas.location.state.exam,\n    questions                          :  props.qas.location.state.questions,\n    currentQuestionIndex               :  index,\n    solvedQuestionIndexes              :  props.qas.location.state.solvedQuestionIndexes, unsolvedQuestionIndexes            :  props.qas.location.state.unsolvedQuestionIndexes,\n    markedSolvedIndexes                :  props.qas.location.state.markedSolvedIndexes,\n    markedUnsolvedIndexes              :  props.qas.location.state.markedUnsolvedIndexes\n  }\n  history.replace(\"/startexam\", examDetailsButtons) ;\n}\n\nfunction getColor(index,myIndex,qa)\n{\n    if(index === myIndex) {return \"btn btn-sm btn-danger\";}\n    switch (qa.answered) {\n      case \"unanswered\"         : return \"btn btn-sm btn-outline-dark\";\n      case \"answered\"           : return \"btn btn-sm btn-success\";\n      case \"answeredandreview\"  : return \"btn btn-sm btn-primary\";\n      default                   : return \"btn btn-sm btn-warning\";\n    }\n}\n\nexport default QuestionButtons;\n","import React, { useState, useEffect, useContext } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport API from '../../api';\nimport {ShowContext} from '../../App';\n\nfunction NextSaveButton(props) {\n        const {setShow,setMsg} = useContext(ShowContext);\n\n        const [islast, setIslast]   = useState(false)\n        const myIndex               = parseInt(props.data.location.state.currentQuestionIndex);\n        let history                 = useHistory();\n        const maxQuestions          = parseInt(props.data.location.state.questions.length);\n\n        useEffect(() =>\n        {\n          myIndex < (maxQuestions) ? setIslast(false) : setIslast(true);\n        },[myIndex,maxQuestions]);\n\n        console.log('myOption', props.myOption);\n        return (\n            <div className=\"col-lg-3\">\n                <button className=\"btn btn-primary\"\n                onClick={() => {\n                  saveAndChangeIndex(props,(myIndex+1),history,maxQuestions,props.myOption,setShow,setMsg)\n                }}\n                disabled={islast}>Save & Next</button>\n            </div>\n        );\n}\n\nasync function saveAndChangeIndex(props,index,history,maxQuestions,myOption,setShow,setMsg)\n{\n  let myQuestions           = props.data.location.state.questions;\n  const myIndex             = (index-1);\n  const curOptionStatus     = myQuestions[myIndex].answered;\n  const answerId            = myQuestions[myIndex].id;\n  let newOptionStatus       = '';\n\n  let myUnsolvedQuestionIndexes   =  props.data.location.state.unsolvedQuestionIndexes;\n  let mySolvedQuestionIndexes     =  props.data.location.state.solvedQuestionIndexes;\n  let myMarkedUnsolvedIndexes     =  props.data.location.state.markedUnsolvedIndexes;\n  let myMarkedSolvedIndexes       =  props.data.location.state.markedSolvedIndexes;\n\n  //-----------------------Find new option status2---------------------------\n    if(curOptionStatus === 'unanswered'){\n      newOptionStatus = 'answered';\n    }\n    else if(curOptionStatus === 'unansweredandreview'){\n      newOptionStatus = 'answeredandreview';\n    }\n    else {\n      newOptionStatus = curOptionStatus;\n    }\n    //-----------------------------------------------------------------\n\n  if(myOption !== undefined && myOption !== null)\n  {\n    //-----------------------Send Data to Server--------------------------------\n    const ExamId = props.data.location.state.exam.id;\n    await API.put('/answer/'+answerId,{\"type\":\"saveanswer\",\"answered\": newOptionStatus, \"stdanswer\": myOption, \"answer_by\": ExamId})\n    .then(res =>\n     {\n         if(res.data.status === 'success')\n         {\n           //-----------------------Save Data to Local Array---------------------------\n             if(curOptionStatus === 'unanswered'){\n               newOptionStatus = 'answered';\n               myQuestions[myIndex].answered = newOptionStatus;\n               myUnsolvedQuestionIndexes = myUnsolvedQuestionIndexes.filter(item => item !== myIndex);\n               mySolvedQuestionIndexes.push(myIndex);\n               myUnsolvedQuestionIndexes.sort();\n               mySolvedQuestionIndexes.sort();\n             }\n             else if(curOptionStatus === 'unansweredandreview'){\n               newOptionStatus = 'answeredandreview';\n               myQuestions[myIndex].answered = newOptionStatus;\n               myMarkedUnsolvedIndexes = myMarkedUnsolvedIndexes.filter(item => item !== myIndex);\n               myMarkedSolvedIndexes.push(myIndex);\n               myMarkedUnsolvedIndexes.sort();\n               myMarkedSolvedIndexes.sort();\n             }\n             else {\n               newOptionStatus = curOptionStatus;\n             }\n             //-----------------------------------------------------------------\n\n             if(index < maxQuestions)\n             {\n               const examDetailsButtons = {\n                 exam                               :  props.data.location.state.exam,\n                 questions                          :  myQuestions,\n                 currentQuestionIndex               :  myIndex+1,\n                 solvedQuestionIndexes              :  mySolvedQuestionIndexes, unsolvedQuestionIndexes            :  myUnsolvedQuestionIndexes,\n                 markedSolvedIndexes                :  myMarkedSolvedIndexes,\n                 markedUnsolvedIndexes              :  myMarkedUnsolvedIndexes\n               }\n               props.setMyOption(undefined);\n               history.replace(\"/startexam\", examDetailsButtons) ;\n             }\n         }\n     })\n    .catch(error =>\n     {\n       if(error.response.status !== 429)\n       {\n           let examDetails = {};\n           const myQuestions = getQuestions(props.data.location.state.exam);\n           if(myQuestions)\n           {\n             examDetails = {\n             exam                               :  props.data.location.state.exam,\n             questions                          :  myQuestions,\n             currentQuestionIndex               :  myIndex,\n             solvedQuestionIndexes              :  getIndexes(myQuestions,'answered'), unsolvedQuestionIndexes            :  getIndexes(myQuestions,'unanswered'),\n             markedSolvedIndexes                :  getIndexes(myQuestions,'answeredandreview'),\n             markedUnsolvedIndexes              :  getIndexes(myQuestions,'unansweredandreview'),\n             }\n             props.setMyOption(undefined);\n             history.replace(\"/startexam\", examDetails) ;\n           }\n        }\n        else\n        {\n           setShow(true);\n           setMsg('Server is Busy. Please wait for some Seconds...');\n           if(index < maxQuestions)\n           {\n             const examDetailsButtons = {\n             exam                               :  props.data.location.state.exam,\n             questions                          :  props.data.location.state.questions,\n             currentQuestionIndex               :  myIndex,\n             solvedQuestionIndexes              :  props.data.location.state.solvedQuestionIndexes, unsolvedQuestionIndexes            :  props.data.location.state.unsolvedQuestionIndexes,\n             markedSolvedIndexes                :  props.data.location.state.markedSolvedIndexes,\n             markedUnsolvedIndexes              :  props.data.location.state.markedUnsolvedIndexes,\n             }\n             props.setMyOption(undefined);\n             history.replace(\"/startexam\", examDetailsButtons) ;\n           }\n        }\n     });\n    //--------------------------------------------------------------------------\n  }\n  else\n  {\n    if(index < maxQuestions)\n    {\n      const examDetailsButtons = {\n      exam                               :  props.data.location.state.exam,\n      questions                          :  props.data.location.state.questions,\n      currentQuestionIndex               :  myIndex+1,\n      solvedQuestionIndexes              :  props.data.location.state.solvedQuestionIndexes, unsolvedQuestionIndexes            :  props.data.location.state.unsolvedQuestionIndexes,\n      markedSolvedIndexes                :  props.data.location.state.markedSolvedIndexes,\n      markedUnsolvedIndexes              :  props.data.location.state.markedUnsolvedIndexes,\n      }\n      props.setMyOption(undefined);\n      history.replace(\"/startexam\", examDetailsButtons) ;\n    }\n  }\n}\n\n\nasync function getQuestions(exam)\n{\n  const ExamId = exam.id;\n  const res = await API.get('/answer',{params: {\"exam_id\": ExamId}});\n\n  if(res.data.status === 'success')\n  {\n    return res.data.data;\n  }\n  else\n  {\n    return null;\n  }\n}\n\nfunction getIndexes(myQuestions,searchString)\n{\n  let arr     = [];\n  myQuestions.forEach(function(question,index){\n    if(question.answered === searchString)\n    {\n      arr.push(index);\n    }\n  });\n  return arr;\n}\n\nexport default NextSaveButton;\n","import React from 'react';\n\nfunction OverallSummery(props) {\n        return (\n          <div className=\"col-lg-12\" style={{float:\"right\",marginTop:\"10px\"}}>\n              <div className='card col-lg-12'>\n                  <div className=\"card-header bg-primary row\" style={{color:\"white\"}}>\n                    <div className=\"col-lg-12\">\n                      <h6><b><center>Overall Exam Summery</center></b></h6>\n                    </div>\n                  </div>\n                  <div className=\"card-body col-lg-12 row\" style={{float:\"right\" ,width:\"350px\"}}>\n\n                    <div className=\"col-lg-2\" style={{marginBottom:\"5px\"}}>\n                      <button className=\"btn btn-danger\" style={{height:\"30px\"}}>{parseInt(props.data.location.state.currentQuestionIndex)+1}</button>\n                    </div>\n                    <div className=\"col-lg-10\" style={{fontSize:\"8\"}}>\n                      Current Question\n                    </div>\n                    <div className=\"col-lg-12\">\n                      <hr/>\n                    </div>\n\n                    <div className=\"col-lg-2\" style={{marginBottom:\"5px\"}}>\n                      <button className=\"btn btn-sm btn-success\">{props.data.location.state.solvedQuestionIndexes.length}</button>\n                    </div>\n                    <div className=\"col-lg-10\" style={{fontSize:\"8\"}}>\n                      Attempted\n                    </div>\n\n                    <div className=\"col-lg-2\" style={{marginBottom:\"5px\"}}>\n                      <button className=\"btn btn-sm btn-outline-dark\">{props.data.location.state.unsolvedQuestionIndexes.length}</button>\n                    </div>\n                    <div className=\"col-lg-10\" style={{fontSize:\"8\"}}>\n                      Not Attempted\n                    </div>\n\n                    <div className=\"col-lg-2\" style={{marginBottom:\"5px\"}}>\n                      <button className=\"btn btn-sm btn-primary\">{props.data.location.state.markedSolvedIndexes.length}</button>\n                    </div>\n                    <div className=\"col-lg-10\" style={{fontSize:\"8\"}}>\n                      Attempted and Review\n                    </div>\n\n                    <div className=\"col-lg-2\">\n                      <button className=\"btn btn-sm btn-warning\">{props.data.location.state.markedUnsolvedIndexes.length}</button>\n                    </div>\n                    <div className=\"col-lg-10\" style={{fontSize:\"8\"}}>\n                      Not Attempted and Review\n                    </div>\n                    <div className=\"col-lg-12\">\n                      <hr/>\n                    </div>\n\n                    <div className=\"col-lg-12\">\n                      <h6><b>Total Attempted Questions:{parseInt(props.data.location.state.markedSolvedIndexes.length) + parseInt(props.data.location.state.solvedQuestionIndexes.length)}</b></h6>\n                    </div>\n                  </div>\n              </div>\n            </div>\n        );\n}\n\nexport default OverallSummery;\n","import React, { useState, useEffect } from 'react';\nimport Modal from \"react-bootstrap/Modal\";\nimport Button from \"react-bootstrap/Button\";\nimport OverallSummery from \"./OverallSummery\";\nimport { useHistory } from 'react-router-dom';\nimport API from '../../api';\n\n\nfunction EndExamButton(props) {\n  const [isLast, setIsLast]               = useState(false);\n  const [show, setShow]                   = useState(false);\n  let history                             = useHistory();\n\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n  const index = parseInt(props.index);\n  const length= parseInt(props.length);\n\n  useEffect(() => {\n    index === length-1 ? setIsLast(true):  setIsLast(false);\n  },[index,length]);\n        return (\n          isLast ?\n          <>\n            <div className=\"col-lg-3\">\n              <button className=\"btn btn-warning\" onClick={handleShow}>End Exam</button>\n            </div>\n\n            <Modal show={show} onHide={handleClose} size=\"lg\">\n                <Modal.Body>\n                    <OverallSummery data={props.data}/>\n                    <center>\n                      <h5>Are you sure to End the Exam?</h5>\n                      <Button variant=\"success\" onClick={() => {\n                        handleEndExam(props,history);\n                      }}>Yes</Button> &nbsp;&nbsp;\n                      <Button variant=\"danger\" onClick={handleClose}>No</Button>\n                    </center>\n                </Modal.Body>\n            </Modal>\n          </>\n            : null\n        );\n}\n\nasync function handleEndExam(props,history)\n{\n  const exam      = props.data.location.state.exam;\n  const ExamId    = exam.id;\n\n  const res = await API.put('/exam/'+ExamId,{\"status\": \"end\"});\n  if(res.data.status === 'success')\n  {\n    history.replace(\"/studenthome\");\n  }\n}\n\nexport default EndExamButton;\n","import React, { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nfunction PreviousButton(props) {\n        const [isfirst, setIsfirst]  = useState(false)\n        const myIndex               = parseInt(props.data.location.state.currentQuestionIndex);\n        let history                 = useHistory();\n\n        useEffect(() =>\n        {\n          myIndex === 0 ? setIsfirst(true) : setIsfirst(false);\n        },[props,myIndex]);\n\n        return (\n            <div className=\"col-lg-3\">\n                <button className=\"btn btn-primary\" onClick={() => {props.setMyOption(undefined);\n                  changeIndex(props,(myIndex-1),history)}}\n                disabled={isfirst}>Previous</button>\n            </div>\n        );\n}\n\nfunction changeIndex(props,index,history)\n{\n  if(index >= 0)\n  {\n    const examDetailsButtons = {\n      exam                               :  props.data.location.state.exam,\n      questions                          :  props.data.location.state.questions,\n      currentQuestionIndex               :  index,\n      solvedQuestionIndexes              :  props.data.location.state.solvedQuestionIndexes, unsolvedQuestionIndexes            :  props.data.location.state.unsolvedQuestionIndexes,\n      markedSolvedIndexes                :  props.data.location.state.markedSolvedIndexes,\n      markedUnsolvedIndexes              :  props.data.location.state.markedUnsolvedIndexes\n    }\n    history.replace(\"/startexam\", examDetailsButtons) ;\n  }\n}\n\n\nexport default PreviousButton;\n","import React from 'react';\nimport API from '../../api';\nimport { useHistory } from 'react-router-dom';\n\n\nfunction ReviewLater(props) {\n\n        let myReviewArray     = props.myReviewQuestions;\n        const questionIndex   = props.index;\n        let history           = useHistory();\n        const reviewVal       = myReviewArray[questionIndex];\n\n        return (\n            <div className=\"col-lg-3\">\n              <input type=\"checkbox\" name=\"reviewlater\" checked={reviewVal} onChange={() => {\n                toggleReview(reviewVal,questionIndex,props,history);\n              }}/> To be Reviewed Later\n            </div>\n        );\n}\n\nasync function toggleReview(reviewVal,questionIndex,props,history,setCheckValue,checkValue)\n{\n  let questions = props.data.location.state.questions;\n\n  const origAnswerType = questions[questionIndex].answered;\n  const answerId       = questions[questionIndex].id;\n  let newAnswerType ='unanswered';\n\n  let myUnsolvedQuestionIndexes   =  props.data.location.state.unsolvedQuestionIndexes;\n  let mySolvedQuestionIndexes     =  props.data.location.state.solvedQuestionIndexes;\n  let myMarkedUnsolvedIndexes     =  props.data.location.state.markedUnsolvedIndexes;\n  let myMarkedSolvedIndexes       =  props.data.location.state.markedSolvedIndexes;\n\n\n  if(origAnswerType === 'answered')\n  {\n    newAnswerType = 'answeredandreview';\n\n    mySolvedQuestionIndexes = mySolvedQuestionIndexes.filter(item => item !== questionIndex);\n    myMarkedSolvedIndexes.push(questionIndex);\n\n  }\n  else if(origAnswerType === 'unanswered')\n  {\n    newAnswerType = 'unansweredandreview';\n\n    myUnsolvedQuestionIndexes = myUnsolvedQuestionIndexes.filter(item => item !== questionIndex);\n    myMarkedUnsolvedIndexes.push(questionIndex);\n\n  }\n  else if(origAnswerType === 'answeredandreview')\n  {\n    newAnswerType = 'answered';\n\n    myMarkedSolvedIndexes = myMarkedSolvedIndexes.filter(item => item !== questionIndex);\n    mySolvedQuestionIndexes.push(questionIndex);\n\n  }\n  else if(origAnswerType === 'unansweredandreview')\n  {\n    newAnswerType = 'unanswered';\n\n    myMarkedUnsolvedIndexes = myMarkedUnsolvedIndexes.filter(item => item !== questionIndex);\n    myUnsolvedQuestionIndexes.push(questionIndex);\n\n  }\n  myMarkedUnsolvedIndexes.sort();\n  myMarkedSolvedIndexes.sort();\n  mySolvedQuestionIndexes.sort();\n  myUnsolvedQuestionIndexes.sort();\n\n  questions[questionIndex].answered = newAnswerType;\n  //---------------Update answer to Database------------------------------------\n  await API.put('/answer/'+answerId,{\"type\":\"savereview\",\"answered\": newAnswerType})\n  .then(res =>\n   {\n       if(res.data.status === 'success')\n       {\n         const examDetailsButtons = {\n         exam                               :  props.data.location.state.exam,\n         questions                          :  questions,\n         currentQuestionIndex               :  questionIndex,\n         solvedQuestionIndexes              :  mySolvedQuestionIndexes, unsolvedQuestionIndexes            :  myUnsolvedQuestionIndexes,\n         markedSolvedIndexes                :  myMarkedSolvedIndexes,\n         markedUnsolvedIndexes              :  myMarkedUnsolvedIndexes,\n         }\n         history.replace(\"/startexam\", examDetailsButtons) ;\n       }\n  })\n  .catch(error =>\n  {\n       const examDetailsButtons = {\n       exam                               :  props.data.location.state.exam,\n       questions                          :  props.data.location.state.questions,\n       currentQuestionIndex               :  questionIndex,\n       solvedQuestionIndexes              :  props.data.location.state.solvedQuestionIndexes, unsolvedQuestionIndexes            :  props.data.location.state.unsolvedQuestionIndexes,\n       markedSolvedIndexes                :  props.data.location.state.markedSolvedIndexes,\n       markedUnsolvedIndexes              :  props.data.location.state.markedUnsolvedIndexes,\n       }\n       history.replace(\"/startexam\", examDetailsButtons) ;\n  });\n  //----------------------------------------------------------------------------\n}\n\nexport default ReviewLater;\n","import React ,{ useState, useEffect }  from 'react';\nimport CountdownTimer from \"react-component-countdown-timer\";\nimport { useHistory } from 'react-router-dom';\nimport API from '../../api';\n\nfunction MyTimer(props) {\n        let [timer, setTimer]             =   useState();\n\n        const exam = props.data.location.state.exam;\n        const examId = exam.id;\n        const examDuration = exam.paper.duration;\n        let history                             = useHistory();\n\n        useEffect(() =>\n        {\n                getTimer(setTimer,examId,examDuration);\n                const heartBeatDuration = process.env.REACT_APP_HEART_BEAT_DURATION;\n                //------------Elapsed Time Book Keeping-------------------------------\n                let myInterval = setInterval(() => {\n                    manageExamSession(setTimer,examId,examDuration)\n                }, heartBeatDuration)\n                //--------------------------------------------------------------------\n                //--------------Cleanup Function--------------------------------------\n                return () => {\n                    clearInterval(myInterval);\n                }\n                //--------------------------------------------------------------------\n        },[examId, examDuration]);\n\n        return (\n            timer ? <CountdownTimer count={timer} hideDay size={20} backgroundColor=\"#007bff\" color=\"#ffffff\" onEnd={() => {handleEndExam(props,history);}}/> : null\n        );\n}\n\nasync function handleEndExam(props,history)\n{\n  const exam      = props.data.location.state.exam;\n  const ExamId    = exam.id;\n\n  const res = await API.put('/exam/'+ExamId,{\"status\": \"end\"});\n  if(res.data.status === 'success')\n  {\n    history.replace(\"/studenthome\");\n  }\n}\n\nasync function getTimer(setTimer,examId, examDuration)\n{\n  const duration = examDuration * 60;\n  await API.get('/examSession',{params: {\"exam_id\": examId}})\n  .then((res) => {\n    const timerData = res.data;\n    setTimer(duration - timerData.elapsedTime);\n  })\n  .catch((error) =>\n  {\n    console.log(error.response.status);\n  });\n}\n\nasync function manageExamSession(setTimer,examId, examDuration)\n{\n  const duration = examDuration * 60;\n  await API.put('/examSession',{\"exam_id\": examId})\n  .then((res) => {\n    const timerData = res.data;\n    setTimer(duration - timerData.elapsedTime);\n  })\n  .catch((error) =>\n  {\n    console.log(error.response.status);\n  });\n}\n\n\nexport default MyTimer;\n","import React ,{ useState, useEffect, useContext }  from 'react';\nimport QuestionAnswer from \"./Exam/QuestionAnswer\";\nimport QuestionButtons from \"./Exam/QuestionButtons\";\nimport NextSaveButton from \"./Exam/NextSaveButton\";\nimport EndExamButton from \"./Exam/EndExamButton\";\nimport PreviousButton from \"./Exam/PreviousButton\";\nimport OverallSummery from \"./Exam/OverallSummery\";\nimport ReviewLater from \"./Exam/ReviewLater\";\nimport MyTimer from \"./Exam/MyTimer.js\";\nimport { useHistory } from 'react-router-dom';\nimport API from '../api';\nimport {ShowContext} from '../App';\n\nfunction Startexam(props)\n{\n  const {setShow,setMsg} = useContext(ShowContext);\n  let history                         =   useHistory();\n\n  let [myOption, setMyOption]          = useState();\n  if(props.location.state)\n  {\n    var originalSelectedOptions        = getSelectedOptions(props.location.state.questions);\n    var questionIndex                  = props.location.state.currentQuestionIndex;\n    var myReviewArray                  = getReviewOptions(props.location.state.questions);\n  }\n\n  let [selectedOptions, setSelectedOptions] = useState(originalSelectedOptions);\n\n  useEffect(() => {\n    if(myOption)\n    {\n      setSelectedOptions(prev => {\n        return {...prev, [questionIndex]: myOption}\n      });\n    }\n  }, [myOption]);\n\n  useEffect(() =>\n  {\n    window.addEventListener('blur', onBlur);\n    window.myParameter    = props;\n    window.setShow        = setShow;\n    window.setMsg         = setMsg;\n    window.myHistory      = history;\n    return () =>\n    {\n      window.removeEventListener('blur', onBlur);\n      window.myParameter    = '';\n      window.setShow        = '';\n      window.setMsg         = '';\n      window.myHistory      = '';\n    };\n  });\n\n  return (\n    props.location.state ?\n      <div className=\"row\">\n          <div className='card col-lg-12'>\n              <div className=\"card-header bg-primary row\" style={{color:\"white\"}}>\n                <div className=\"col-lg-8\">\n                  <h5><b>Exam Name: {props.location.state.exam.paper.paper_name}</b></h5>\n                </div>\n                <div className=\"col-lg-4\">\n                      <i className=\"fas fa-clock fa-lg\"></i> &nbsp;&nbsp;\n                      <MyTimer data={props} />\n                </div>\n              </div>\n          </div>\n\n          <div className=\"card col-lg-8\">\n            <div className=\"card-body\">\n              <QuestionAnswer questions={props} setMyOption={setMyOption}  selectedOptions={selectedOptions}/>\n              <hr/>\n              <div className=\"col-lg-12 row\">\n                <PreviousButton data={props} setMyOption={setMyOption}/>\n                <NextSaveButton data={props} myOption={myOption} setMyOption={setMyOption}/>\n                <EndExamButton index={questionIndex} length={props.location.state.questions.length} data={props}/>\n                <ReviewLater data={props} myReviewQuestions={myReviewArray} index={questionIndex}/>\n              </div>\n            </div>\n          </div>\n          <div className=\"col-lg-4\" style={{float: \"right\"}}>\n            <QuestionButtons qas={props}/>\n            <OverallSummery data={props}/>\n          </div>\n      </div> : null\n  );\n}\n\nconst onBlur = async (evt) =>\n{\n  const exam                    = evt.currentTarget.myParameter.location.state.exam;\n  const total_allowable_alerts  = evt.currentTarget.myParameter.location.state.exam.paper.exam_switch_alerts;\n  let history                   = evt.currentTarget.myHistory;\n\n  const ExamId                  = exam.id;\n  const setShow                 = evt.currentTarget.setShow;\n  const setMsg                  = evt.currentTarget.setMsg;\n\n  await API.put('/exam/'+ExamId,{\"status\": \"windowswitch\"})\n  .then((res) => {\n    if(res.data.status === 'success')\n    {\n      if(parseInt(res.data.switchedcount) === parseInt(total_allowable_alerts))\n      {\n          //---------------end Examination-----------------------------------\n          handleEndExam(exam,history,setShow,setMsg,res.data.switchedcount);\n          //-----------------------------------------------------------------\n      }\n      else if(parseInt(res.data.switchedcount)+ 5 === parseInt(total_allowable_alerts))\n      {\n        alert('Your Window switching limit is about to expire. Continuing switching window now will end your Examination abruptly.');\n      }\n      else\n      {\n        alert('Please do not switch window while exam is in progress. This Event will be Recorded.');\n      }\n    }\n  })\n  .catch((error) =>\n  {\n    alert('Please do not switch window while exam is in progress.');\n  });\n};\n\nasync function handleEndExam(exam,history,setShow,setMsg,cnt)\n{\n  const ExamId    = exam.id;\n\n  await API.put('/exam/'+ExamId,{\"status\": \"end\"})\n  .then((res) => {\n    if(res.data.status === 'success')\n    {\n      setShow(true);\n      setMsg('Your Examination is Ended abruptly because you switched window '+cnt+' times.');\n      history.replace(\"/studenthome\");\n    }\n  })\n  .catch((error) =>\n  {\n    alert('Please do not switch window while exam is in progress.');\n  });\n}\n\n\nfunction getSelectedOptions(questions)\n{\n  let originalSelectedOptions = {};\n  questions.map((question,index) =>\n  {\n    originalSelectedOptions[index] = question.stdanswer\n  });\n  return originalSelectedOptions;\n}\n\nfunction getReviewOptions(questions)\n{\n  let array = [];\n  questions.map((question,index) =>\n  {\n      if(question.answered.indexOf('review') >= 0)\n      {\n        array[index] = true;\n      }\n      else\n      {\n        array[index] = false;\n      }\n  });\n  return array;\n}\n\nexport default Startexam;\n","import React from 'react';\nimport { Route } from 'react-router-dom';\nimport Sidebar from './Sidebar';\nimport Footer from './Footer';\nimport Login from '../Components/Login';\nimport StudHome from '../Components/Student/StudHome';\nimport Instructions from '../Components/Student/Instructions';\nimport Startexam from '../Components/Startexam';\n\nfunction Content() {\n        return (\n                <div id=\"layoutSidenav\">\n                    <div id=\"layoutSidenav_nav\"><Sidebar /></div>\n                    <div id=\"layoutSidenav_content\">\n                        <main>\n                            <Route exact path=\"/\" component={Login} />\n                            <Route exact path=\"/login\" component={Login} />\n                            <Route exact path=\"/studenthome\" component={StudHome} />\n                            <Route exact path=\"/instructions\" component={Instructions} />\n                            <Route exact path=\"/startexam\" component={Startexam} />\n                        </main>\n                        <footer className=\"py-4 bg-light mt-auto\">\n                            <Footer />\n                        </footer>\n                    </div>\n                </div>\n        );\n}\n\nexport default Content;\n","import React from 'react';\nimport Alert from \"react-bootstrap/Alert\";\n\nfunction AlertDismissible(props)\n{\n  return (\n    props.myShow && props.myMsg ?\n      <Alert\n        variant={\"dark\"}\n        onClose={() => props.mySetShow(false)}\n        dismissible\n        style={{position:\"fixed\",top:\"83%\",width:\"58%\",left:\"22%\",zIndex:\"99999\"}}\n        >\n        {props.myMsg}\n      </Alert> : null\n  );\n}\n\nexport default AlertDismissible;\n","import React, { useState } from 'react';\nimport Header from './Layout/Header';\nimport Content from './Layout/Content';\nimport AlertDismissible from './AlertDismissible';\nimport { createBrowserHistory } from 'history'\nimport { Router } from 'react-router-dom';\nimport API from './api';\n\nexport const ShowContext = React.createContext();\nconst browserHistory = createBrowserHistory({});\n\n\n//----------------------Axios Interceptors--------------------------------------\nfunction setupAxios(setShow, setMsg) {\n  API.interceptors.request.use(function (config)\n  {\n    if(browserHistory.location.pathname !== '/')\n    {\n      const token = JSON.parse(localStorage.getItem(\"token\"));\n      if (token)\n      {\n        config.headers['Authorization'] = 'Bearer ' + token;\n      }\n    }\n    return config;\n  },\n  function (error)\n  {\n      return Promise.reject(error);\n  });\n\n\n  API.interceptors.response.use(response => response,\n    error =>\n    {\n      const {status} = error.response;\n      if (status === 401)\n        browserHistory.replace('/login');\n      else if (status === 429){\n          setShow(true);\n          setMsg('Server is Busy. Please wait for some seconds...');\n      }\n      return Promise.reject(error);\n    }\n  );\n}\n//----------------------------End of Axios Interceptors-------------------------\n\n\nfunction App()\n{\n    const [show, setShow] = useState(false);\n    const [msg, setMsg]   = useState();\n    setupAxios(setShow, setMsg);\n    return (\n      <div>\n      <Router history={browserHistory}>\n        <ShowContext.Provider value={{setShow:setShow,setMsg:setMsg}}>\n          <Header/>\n          <Content/>\n        </ShowContext.Provider>\n        <AlertDismissible myShow={show} mySetShow={setShow} myMsg={msg}/>\n        </Router>\n      </div>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n      <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}