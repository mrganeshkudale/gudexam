{"version":3,"sources":["api.js","Components/LoginButton.js","Layout/Header.js","Layout/Sidebar.js","Layout/Footer.js","Layout/MyContent.js","Components/Login.js","Components/Student/CountCard.js","Components/Student/ExamCard.js","Components/Student/StudHome.js","Components/Student/Instructions.js","Components/Exam/Options.js","Components/Exam/QuestionAnswer.js","Components/Exam/QuestionButtons.js","Components/Exam/NextSaveButton.js","Components/Exam/OverallSummery.js","Components/Exam/EndExamButton.js","Components/Exam/PreviousButton.js","Components/Exam/ReviewLater.js","Components/Exam/MyTimer.js","Components/Startexam.js","Layout/Content.js","AlertDismissible.js","App.js","index.js"],"names":["axios","create","baseURL","process","LoginButton","props","history","useHistory","a","label","API","post","data","status","localStorage","clear","setIsLoggedIn","replace","onClick","loginLogout","className","Header","useContext","ShowContext","setShow","setMsg","location","useLocation","useState","toggle","setToggle","isLoggedIn","useEffect","PathName","pathname","searchString","split","find","str","href","id","document","body","classList","add","remove","toggleSidebar","type","placeholder","aria-label","aria-describedby","url","Sidebar","Footer","MyContent","width","height","cellSpacing","Login","flag","setFlag","myRecaptcha","setMyRecaptcha","myMsg","setMyMsg","updateFlag","undefined","initialValues","username","password","instId","onSubmit","values","setSubmitting","checkLogin","validationSchema","Yup","shape","required","when","is","then","touched","errors","isSubmitting","handleChange","handleBlur","handleSubmit","value","userame","onChange","onBlur","class1name","name","sitekey","disabled","res","setItem","JSON","stringify","token","message","get","params","CountCard","style","fontSize","color","count","ExamCard","TotalQuestions","ExamDuration","BtnCaption","StartTime","EndTime","Theme","BtnTheme","myLink","exam","examstatus","PaperName","paper","paper_name","questions","duration","startedon","endon","to","e","preventDefault","from_date","from_time","to_date","to_time","state","userRequest","btnCaption","paperName","startTime","endTime","totQuestions","examDuration","theme","btnTheme","StudHome","loading","myExams","numExams","compExams","yetToStartExam","resumeExam","expiredExam","setUserRequest","exams","console","log","compleated","yetToStart","resume","expired","Object","keys","forEach","key","length","map","setStartexam","examDetails","startMyExam","getQuestions","myQuestions","currentQuestionIndex","solvedQuestionIndexes","getIndexes","unsolvedQuestionIndexes","markedSolvedIndexes","markedUnsolvedIndexes","ExamId","put","arr","question","index","answered","push","Instructions","checked","setChecked","startexam","setExam","myExam","useOptions","BtnLabel","negativeMarks","negative_marks","defaultChecked","ExamStart","verifyOption","questionIndex","selectedOptions","optType","Options","opt","optImg","opt_path","optimage","setMyOption","math","src","alt","QuestionAnswer","question_path","qu_fig","qnid_sr","overflow","optiona","a1","qu","optionb","a2","optionc","a3","optiond","a4","getColor","myIndex","qa","QuestionButtons","qas","float","margin","examDetailsButtons","changeIndex","maxQuestions","myOption","curOptionStatus","answerId","newOptionStatus","myUnsolvedQuestionIndexes","mySolvedQuestionIndexes","myMarkedUnsolvedIndexes","myMarkedSolvedIndexes","filter","item","sort","catch","error","response","NextSaveButton","islast","setIslast","parseInt","saveAndChangeIndex","OverallSummery","marginTop","marginBottom","EndExamButton","isLast","setIsLast","show","handleClose","Modal","onHide","size","Body","Button","variant","handleEndExam","PreviousButton","isfirst","setIsfirst","reviewVal","setCheckValue","checkValue","origAnswerType","newAnswerType","ReviewLater","myReviewArray","myReviewQuestions","toggleReview","setTimer","examId","timerData","elapsedTime","MyTimer","timer","getTimer","myInterval","setInterval","manageExamSession","clearInterval","hideDay","backgroundColor","onEnd","evt","currentTarget","myParameter","total_allowable_alerts","exam_switch_alerts","myHistory","switchedcount","alert","cnt","Startexam","originalSelectedOptions","stdanswer","getSelectedOptions","array","indexOf","getReviewOptions","setSelectedOptions","prev","window","addEventListener","removeEventListener","Content","exact","path","component","Home","AlertDismissible","myShow","Alert","onClose","mySetShow","dismissible","position","top","left","zIndex","React","createContext","browserHistory","createBrowserHistory","App","msg","interceptors","request","use","config","parse","getItem","headers","Promise","reject","setupAxios","Provider","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.097ecf1f.chunk.js","sourcesContent":["import axios from 'axios';\n\nconst serverPath = process.env.REACT_APP_SERVER_PROJPATH;\n\nexport default axios.create({\n  baseURL: serverPath\n});\n","import React from 'react';\nimport API from '../api';\nimport { useHistory } from 'react-router-dom';\n\nfunction LoginButton(props)\n{\n  let history = useHistory(props);\n\n  async function loginLogout()\n  {\n    if(props.label === 'Logout')\n    {\n      //-----------Call Logout API and on success redirect to Login Page-------\n\n      const res = await API.post('/logout');\n\n      if(res.data.status === 'Success')\n      {\n        await localStorage.clear();\n        props.setIsLoggedIn(false);\n        history.replace('/login');\n      }\n      //-----------------------------------------------------------------------\n    }\n    else\n    {\n        history.replace('/login');\n    }\n  }\n\n    return (\n        <div>\n          <button onClick={() => {loginLogout(props)}} className=\"btn btn-primary\">{props.label}</button>\n        </div>\n    );\n}\n\nexport default LoginButton;\n","import React, { useState , useEffect, useContext } from 'react';\nimport LoginButton from '../Components/LoginButton';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport {ShowContext} from '../App';\n\n\nfunction Header()\n{\n    const {setShow,setMsg} = useContext(ShowContext);\n\n    let history                         =   useHistory();\n    let location                        =   useLocation();\n    let [toggle, setToggle]             =   useState(true);\n    let [isLoggedIn, setIsLoggedIn]     =   useState(false);\n\n    useEffect(() =>\n    {\n      let PathName = location.pathname;\n      const searchString = process.env.REACT_APP_NON_AUTH_PATHS.split(' ').find((str) => str === PathName);\n\n      if(PathName!==searchString)\n      {\n          setIsLoggedIn(true);\n      }\n      else\n      {\n          setIsLoggedIn(false);\n      }\n    },[location,history,setShow,setMsg]);\n\n\n    return(\n            <nav className=\"sb-topnav navbar navbar-expand navbar-dark bg-dark\">\n                <a className=\"navbar-brand\" href=\"_blank\">GudExams</a>\n                <button className=\"btn btn-link btn-sm order-1 order-lg-0\" id=\"sidebarToggle\" onClick={() => {toggleSidebar(setToggle,toggle)}}><i className=\"fas fa-bars\"></i></button>\n\n                <form className=\"d-none d-md-inline-block form-inline ml-auto mr-0 mr-md-3 my-2 my-md-0\">\n                    <div className=\"input-group\">\n                        <input className=\"form-control\" type=\"text\" placeholder=\"Search for...\" aria-label=\"Search\" aria-describedby=\"basic-addon2\" />\n                        <div className=\"input-group-append\">\n                            <button className=\"btn btn-primary\" type=\"button\"><i className=\"fas fa-search\"></i></button>\n                        </div>\n                    </div>\n                </form>\n                { isLoggedIn ? <LoginButton url={'/logout'} label={'Logout'} setIsLoggedIn={setIsLoggedIn}/>: <LoginButton url={'/login'} label={'Login'}/>}\n            </nav>\n    );\n}\n\nfunction toggleSidebar(setToggle,toggle)\n{\n    setToggle(toggle =!toggle);\n    if(!toggle)\n    {\n        document.body.classList.add('sb-sidenav-toggled');document.body.classList.remove('sb-nav-fixed');\n    }\n    else\n    {\n        document.body.classList.add('sb-nav-fixed');document.body.classList.remove('sb-sidenav-toggled');\n    }\n}\n\nexport default Header;\n","import React from 'react';\nfunction Sidebar() {\n        return (\n                    <nav className=\"sb-sidenav accordion sb-sidenav-dark\" id=\"sidenavAccordion\" >\n                        <div className=\"sb-sidenav-menu\">\n                            <div className=\"nav\">\n                                <div className=\"sb-sidenav-menu-heading\">Menu</div>\n                                <a className=\"nav-link\" href=\"/\">\n                                    <div className=\"sb-nav-link-icon\"><i className=\"fas fa-tachometer-alt\"></i></div>\n                                    Home\n                                </a>\n                            </div>\n                        </div>\n                    </nav>\n        );\n}\n\nexport default Sidebar;","import React from 'react';\n\nfunction Footer() {\n        return (\n            <div className=\"container-fluid\">\n                <div className=\"d-flex align-items-center justify-content-between small\">\n                    <div className=\"text-muted\">Copyright &copy; Your Website 2020</div>\n                    <div>\n                        <a href=\"_blank\">Privacy Policy</a>&middot;<a href=\"_blank\">Terms &amp; Conditions</a>\n                    </div>\n                </div>\n            </div>\n        );\n}\n\nexport default Footer;\n","import React from 'react';\n\nfunction MyContent() {\n        return (\n                    <div className=\"container-fluid\">\n                        <h1 className=\"mt-4\">Dashboard</h1>\n                        <ol className=\"breadcrumb mb-4\">\n                            <li className=\"breadcrumb-item active\">Dashboard</li>\n                        </ol>\n                        <div className=\"row\">\n                            <div className=\"col-xl-3 col-md-6\">\n                                <div className=\"card bg-primary text-white mb-4\">\n                                    <div className=\"card-body\">Primary Card</div>\n                                    <div className=\"card-footer d-flex align-items-center justify-content-between\">\n                                        <a className=\"small text-white stretched-link\" href=\"_blank\">View Details</a>\n                                        <div className=\"small text-white\"><i className=\"fas fa-angle-right\"></i></div>\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"col-xl-3 col-md-6\">\n                                <div className=\"card bg-warning text-white mb-4\">\n                                    <div className=\"card-body\">Warning Card</div>\n                                    <div className=\"card-footer d-flex align-items-center justify-content-between\">\n                                        <a className=\"small text-white stretched-link\" href=\"_blank\">View Details</a>\n                                        <div className=\"small text-white\"><i className=\"fas fa-angle-right\"></i></div>\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"col-xl-3 col-md-6\">\n                                <div className=\"card bg-success text-white mb-4\">\n                                    <div className=\"card-body\">Success Card</div>\n                                    <div className=\"card-footer d-flex align-items-center justify-content-between\">\n                                        <a className=\"small text-white stretched-link\" href=\"_blank\">View Details</a>\n                                        <div className=\"small text-white\"><i className=\"fas fa-angle-right\"></i></div>\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"col-xl-3 col-md-6\">\n                                <div className=\"card bg-danger text-white mb-4\">\n                                    <div className=\"card-body\">Danger Card</div>\n                                    <div className=\"card-footer d-flex align-items-center justify-content-between\">\n                                        <a className=\"small text-white stretched-link\" href=\"_blank\">View Details</a>\n                                        <div className=\"small text-white\"><i className=\"fas fa-angle-right\"></i></div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"row\">\n                            <div className=\"col-xl-6\">\n                                <div className=\"card mb-4\">\n                                    <div className=\"card-header\">\n                                        <i className=\"fas fa-chart-area mr-1\"></i>\n                                        Area Chart Example\n                                    </div>\n                                    <div className=\"card-body\"><canvas id=\"myAreaChart\" width=\"100%\" height=\"40\"></canvas></div>\n                                </div>\n                            </div>\n                            <div className=\"col-xl-6\">\n                                <div className=\"card mb-4\">\n                                    <div className=\"card-header\">\n                                        <i className=\"fas fa-chart-bar mr-1\"></i>\n                                        Bar Chart Example\n                                    </div>\n                                    <div className=\"card-body\"><canvas id=\"myBarChart\" width=\"100%\" height=\"40\"></canvas></div>\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"card mb-4\">\n                            <div className=\"card-header\">\n                                <i className=\"fas fa-table mr-1\"></i>\n                                DataTable Example\n                            </div>\n                            <div className=\"card-body\">\n                                <div className=\"table-responsive\">\n                                    <table className=\"table table-bordered\" id=\"dataTable\" width=\"100%\" cellSpacing=\"0\">\n                                        <thead>\n                                            <tr>\n                                                <th>Name</th>\n                                                <th>Position</th>\n                                                <th>Office</th>\n                                                <th>Age</th>\n                                                <th>Start date</th>\n                                                <th>Salary</th>\n                                            </tr>\n                                        </thead>\n                                        <tfoot>\n                                            <tr>\n                                                <th>Name</th>\n                                                <th>Position</th>\n                                                <th>Office</th>\n                                                <th>Age</th>\n                                                <th>Start date</th>\n                                                <th>Salary</th>\n                                            </tr>\n                                        </tfoot>\n                                        <tbody>\n                                            <tr>\n                                                <td>Tiger Nixon</td>\n                                                <td>System Architect</td>\n                                                <td>Edinburgh</td>\n                                                <td>61</td>\n                                                <td>2011/04/25</td>\n                                                <td>$320,800</td>\n                                            </tr>\n                                            <tr>\n                                                <td>Garrett Winters</td>\n                                                <td>Accountant</td>\n                                                <td>Tokyo</td>\n                                                <td>63</td>\n                                                <td>2011/07/25</td>\n                                                <td>$170,750</td>\n                                            </tr>\n                                            <tr>\n                                                <td>Ashton Cox</td>\n                                                <td>Junior Technical Author</td>\n                                                <td>San Francisco</td>\n                                                <td>66</td>\n                                                <td>2009/01/12</td>\n                                                <td>$86,000</td>\n                                            </tr>\n                                        </tbody>\n                                    </table>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n        );\n}\n\nexport default MyContent;\n","import React, { useState , useEffect } from 'react';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport API from '../api';\nimport ReCAPTCHA   from \"react-google-recaptcha\";\nimport { useHistory } from 'react-router-dom';\n\nexport default function Login(props)\n{\n  let history = useHistory();\n  const [flag, setFlag]                           =   useState();\n  const [myRecaptcha, setMyRecaptcha]             =   useState();\n  const [myMsg, setMyMsg]                         =   useState();\n\n  useEffect(() => updateFlag(setFlag), []);\n\n  return (\n    flag !== undefined && <Formik\n        initialValues={{ username: \"\", password: \"\", flag:flag ,instId:\"\" }}\n        onSubmit={(values,{ setSubmitting }) =>\n        {\n          if (myRecaptcha !== undefined){\n            checkLogin(values.username,values.password,values.instId,flag,myRecaptcha,setMyMsg,history);\n          }\n        }}\n        validationSchema={Yup.object().shape({\n            username:Yup.string()\n            .required(\"Username Required\"),\n            password: Yup.string()\n            .required(\"Password is Required\"),\n            flag: Yup.number(),\n            instId: Yup.string().when('flag', {\n              is:0,\n              then: Yup.string().required(\"Inst ID is Required\")\n            })\n        })}\n    >\n    {\n        props => {\n            const {\n                values,\n                touched,\n                errors,\n                isSubmitting,\n                handleChange,\n                handleBlur,\n                handleSubmit\n            } = props;\n            return (\n\n                <div>\n                    <div className=\"container\">\n                        <div className=\"row justify-content-center\">\n                            <div className=\"col-lg-5\">\n                                <div className=\"card shadow-lg border-0 rounded-lg mt-5\">\n                                    <div className=\"card-header\"><h3 className=\"text-center font-weight-light my-4\">GudExams Login</h3></div>\n                                    <div className=\"card-body\" >\n                                        <form onSubmit={handleSubmit}>\n                                            <div className=\"form-group\">\n                                                <label>User Name</label>\n\n                                                <input className=\"form-control py-4\" id=\"username\" type=\"text\"\n                                                value ={values.userame}\n                                                placeholder=\"Enter User Name\"\n                                                onChange={handleChange}\n                                                onBlur={handleBlur}\n                                                class1name={errors.username && touched.username && \"error\"}\n                                                />\n\n                                                {errors.username && touched.username && (\n                                                    <div className=\"alert alert-info\">{errors.username}</div>\n                                                )}\n\n                                            </div>\n                                            <div className=\"form-group\">\n                                                <label className=\"form-group\">Password</label>\n\n                                                <input className=\"form-control py-4\" id=\"password\" type=\"password\"\n                                                value ={values.password}\n                                                placeholder=\"Enter password\"\n                                                onChange={handleChange}\n                                                onBlur={handleBlur}\n                                                class1name={errors.password && touched.password && \"error\"}\n                                                />\n\n                                                {errors.password && touched.password && (\n                                                    <div className=\"alert alert-info\">{errors.password}</div>\n                                                )}\n                                            </div>\n\n                                            {flag === 0 && (<div className=\"form-group\">\n                                                <label className=\"form-group\">Inst ID</label>\n\n                                                <input className=\"form-control py-4\" id=\"instId\" type=\"instId\"\n                                                value ={values.instId}\n                                                placeholder=\"Enter Institute ID\"\n                                                onChange={handleChange}\n                                                onBlur={handleBlur}\n                                                class1name={errors.instId && touched.instId && \"error\"}\n                                                />\n\n                                                {errors.instId && touched.instId && (\n                                                    <div className=\"alert alert-info\">{errors.instId}</div>\n                                                )}\n                                            </div>)}\n\n                                            <ReCAPTCHA name=\"myRecaptcha\" id=\"myRecaptcha\" sitekey=\"6Lcq1t4ZAAAAAKJJI5QBF89XGNTDBIAODpcaJgOo\" onChange={(value) => setMyRecaptcha(value)}/>\n\n                                            <div className=\"form-group d-flex align-items-center justify-content-between mt-4 mb-0\">\n                                                <button className=\"btn btn-primary\" type=\"submit\" id=\"submit\" disabled={isSubmitting}>Login</button>\n                                            </div><br/>\n\n                                            {myMsg !== undefined && (\n                                                <div className=\"alert alert-success\">{myMsg}</div>\n                                            )}\n\n                                        </form>\n                                    </div>\n                                    <div className=\"card-footer text-center\">\n                                        <div className=\"small\"><a href=\"/register\">Need an account? Sign up!</a></div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                      </div>\n                </div>\n            );\n        }\n    }\n    </Formik>\n  );\n}\n\nasync function checkLogin(username,password,instId,flag,myRecaptcha,setMyMsg,history)\n{\n    await API.post('/login',{\"username\":username,\"password\":password,\"inst_id\":instId,\"flag\":flag,\"myRecaptcha\":myRecaptcha}).then(res =>\n    {\n            if(res.data.status === 'success')\n            {\n                localStorage.setItem(\"token\",JSON.stringify(res.data.token));\n                history.replace('/studenthome');\n            }\n            else\n            {\n                setMyMsg(res.data.message);\n            }\n    })\n}\n\nasync function updateFlag(setFlag)\n{\n  const res = await API.get('/settings',{params: {\"type\":\"login\"}});\n  if(res.data.status==='success')\n  {\n      setFlag(res.data.flag);\n  }\n}\n","import React  from 'react';\n\nfunction CountCard(props)\n{\n    return (\n        <div className=\"col-lg-2\" style={{fontSize: \"10px\"}}>\n          <center>\n            <button type=\"button\" className={'btn btn-'+props.color}>{props.count}</button>\n          </center>\n          <center>{props.label}</center>\n        </div>\n    );\n}\n\nexport default CountCard;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nfunction ExamCard(props)\n{\n    let BtnCaption      = '';\n    let StartTime       = '';\n    let EndTime         = '';\n    let TotalQuestions  = 0;\n    let ExamDuration    = 0;\n    let Theme           = '';\n    let BtnTheme        = '';\n    let myLink          = '';\n\n    const status      = props.exam.examstatus;\n\n    const PaperName   = props.exam.paper.paper_name;\n    TotalQuestions    = props.exam.paper.questions;\n    ExamDuration      = props.exam.paper.duration;\n\n    if(status === 'over' || status  === 'expired')\n    {\n      BtnCaption='Completed';\n      StartTime=props.exam.startedon;\n      EndTime=props.exam.endon;\n      if(status ==='over')\n      {\n        Theme = 'text-white bg-success'\n        BtnTheme = 'btn btn-secondary';\n      }\n      else\n      {\n        Theme = 'text-white bg-dark';\n        BtnTheme = 'btn btn-info';\n      }\n      myLink = <Link to=\"\" className={BtnTheme} onClick={e => e.preventDefault()}>{BtnCaption}</Link>\n    }\n    else if(status==='' || status ==='inprogress')\n    {\n      StartTime=props.exam.paper.from_date+' '+props.exam.paper.from_time;\n      EndTime=props.exam.paper.to_date+' '+props.exam.paper.to_time;\n      if(status ==='')\n      {\n        BtnCaption='Start Exam';\n        Theme = 'bg-light';\n        BtnTheme = 'btn btn-primary';\n      }\n      else\n      {\n        BtnCaption='Continue Exam';\n        Theme = 'text-white bg-primary';\n        BtnTheme = 'btn btn-success';\n      }\n      myLink = <Link to={{pathname: '/instructions',state: props.exam }} className={BtnTheme}>{BtnCaption}</Link>;\n    }\n\n    const userRequest = { btnCaption:BtnCaption, paperName:PaperName, startTime:StartTime,  endTime:EndTime, totQuestions:TotalQuestions, examDuration:ExamDuration, theme:Theme, btnTheme:BtnTheme }\n    return (\n            <div className=\"col-lg-4\">\n              <div className='card'>\n                  <div className={\"card-header \"+userRequest.theme}>\n                    <b>{userRequest.paperName}</b>\n                  </div>\n                  <div className=\"card-body\">\n                    <h6 className=\"card-title\"><b>Exam Details</b></h6>\n                    <ul>\n                        <li>Start Time      : {userRequest.startTime}</li>\n                        <li>End Time        : {userRequest.endTime}</li>\n                        <li>No of Questions : {userRequest.totQuestions}</li>\n                        <li>Exam Duration   : {userRequest.examDuration}</li>\n                    </ul>\n                  </div>\n                  <div className=\"card-footer\">\n                    <center>\n                      {myLink}\n                    </center>\n                  </div>\n              </div>\n            </div>\n    );\n}\n\nexport default ExamCard;\n","import React, { useState , useEffect } from 'react';\nimport API from '../../api';\nimport CountCard from './CountCard';\nimport ExamCard from './ExamCard';\n\nfunction StudHome()\n{\n  const [userRequest, setUserRequest] = useState({\n    loading: true,\n    myExams: null,\n    numExams:0,\n    compExams:0,\n    yetToStartExam:0,\n    resumeExam:0,\n    expiredExam:0\n  });\n  useEffect(() =>\n  {\n    (async function anyNameFunction()\n    {\n\n        const res = await API.get('/exam');\n        const exams = await res.data;\n        console.log(exams);\n        //---------------------------------------------------------------------\n        let compleated = 0;\n        let yetToStart = 0;\n        let resume     = 0;\n        let expired    = 0;\n\n        Object.keys(exams.data).forEach(function(key)\n        {\n          if(exams.data[key].examstatus === 'over')\n          {\n            compleated = compleated+1;\n          }\n          else if(exams.data[key].examstatus === '')\n          {\n            yetToStart = yetToStart+1;\n          }\n          else if(exams.data[key].examstatus === 'inprogress')\n          {\n            resume = resume+1;\n          }\n          else if(exams.data[key].examstatus === 'expired')\n          {\n            expired = expired+1;\n          }\n        });\n        //---------------------------------------------------------------------\n        setUserRequest({ loading:false, myExams:exams, numExams:exams.data.length,  compExams:compleated, yetToStartExam:yetToStart, resumeExam:resume, expiredExam:expired });\n    })();\n  },[]);\n\n    return (\n      !userRequest.loading ?\n      <div>\n        <div className=\"container-fluid\">\n            <h1 className=\"mt-4\">Student Home</h1>\n            <ol className=\"breadcrumb mb-4\">\n                <li className=\"breadcrumb-item active\">Student Home</li>\n            </ol>\n            <div className=\"row col-lg-12\">\n              <CountCard count={userRequest.numExams} label={\"All\"} color={\"danger\"}/>\n              <CountCard count={userRequest.compExams} label={\"Compleated\"} color={\"success\"}/>\n              <CountCard count={userRequest.yetToStartExam} label={\"Yet To Start\"} color={\"warning\"}/>\n              <CountCard count={userRequest.resumeExam} label={\"Resume\"} color={\"primary\"}/>\n              <CountCard count={userRequest.expiredExam} label={\"Expired\"} color={\"info\"}/>\n            </div>\n            <br/><br/>\n            <div className=\"row col-lg-12\">\n            {\n              userRequest.myExams ? userRequest.myExams.data.map((exam) =>\n              (\n                  <ExamCard exam={exam} key={exam.id}/>\n              )) : null\n            }\n            </div><br/>\n        </div>\n      </div> : ''\n    );\n}\n\nexport default StudHome;\n","import React ,{ useState, useEffect }  from 'react';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport API from '../../api';\n\nfunction useOptions()\n{\n  let history                           =   useHistory();\n  let location                          =   useLocation();\n  let [exam, setExam]                   =   useState();\n  let myExam                            =   undefined;\n\n  if(location.state)\n  {\n    myExam = location.state;\n  }\n  useEffect(() =>\n  {\n    if (myExam)\n    {\n      setExam(myExam);\n    }\n    else\n    {\n      history.replace(\"/studenthome\");\n    }\n  }, [myExam,history]);\n\n  return exam;\n}\n\nfunction Instructions(props)\n{\n  const [checked, setChecked]         =   useState(false);\n  const [startexam, setStartexam]     =   useState(true);\n  let history                         =   useHistory();\n  let exam                            =   useOptions();\n\n  let button = '';\n  let BtnLabel = '';\n  let  negativeMarks='';\n  if(exam)\n  {\n        if(exam.examstatus==='inprogress')\n        {\n          BtnLabel = 'Continue Exam';\n        }\n        else\n        {\n          BtnLabel = 'Start Exam';\n        }\n\n        exam.paper.negative_marks===0 ?negativeMarks = 'No' : negativeMarks = 'Yes';\n  }\n\n  return (\n      exam ?\n      <div>\n        <div className=\"container-fluid\">\n            <h1 className=\"mt-4\">Exam Instructions</h1>\n            <ol className=\"breadcrumb mb-4\">\n                <li className=\"breadcrumb-item active\">Read Instructions Carefully...</li>\n            </ol>\n            <div className=\"col-lg-12\">\n                  <div className='card'>\n                      <div className=\"card-header bg-primary\" style={{color:\"white\"}}>\n                        <h5><b>{exam.paper.paper_name} Instructions</b></h5>\n                      </div>\n                      <div className=\"card-body\">\n                        <ul>\n                          <li> Welcome to Online Exam for {exam.paper.paper_name}</li>\n                          <li> Exam has total {exam.paper.questions} Questions</li>\n                          <li> Total time for Exam is {exam.paper.duration} Mins</li>\n                          <li> Negative Marking Exam: <b>{negativeMarks}</b></li>\n                        </ul>\n\n                        <h1><i>Best of Luck for your Exam</i></h1>\n                      </div>\n                      <div className=\"card-footer\">\n                        <center>\n                            <input type=\"checkbox\" id=\"read\" name=\"read\" defaultChecked={checked} onChange={() => setChecked(!checked)} /> &nbsp;&nbsp;I have read and understood instructions.<br/><br/>\n                            <button disabled={!checked} onClick={() => ExamStart(history,exam,setStartexam)} className=\"btn btn-success\">{BtnLabel}</button>\n                        </center>\n                      </div>\n                  </div>\n            </div>\n            <br/>\n            <div>{!startexam && (\n                <div className=\"alert alert-info\">Problem Starting Examination</div>\n            )}</div>\n        </div>\n      </div> : ''\n    );\n}\n\nasync function ExamStart(history,exam,setStartexam)\n{\n  let examDetails = {}\n  //------------------Start Exam------------------------------------------------\n    if(await startMyExam(exam))\n    {\n        const myQuestions = await getQuestions(exam);\n        if(myQuestions)\n        {\n          examDetails = {\n          exam: exam,\n          questions: myQuestions,\n          currentQuestionIndex: 0,\n          solvedQuestionIndexes              :  getIndexes(myQuestions,'answered'), unsolvedQuestionIndexes            :  getIndexes(myQuestions,'unanswered'),\n          markedSolvedIndexes                :  getIndexes(myQuestions,'answeredandreview'),\n          markedUnsolvedIndexes              :  getIndexes(myQuestions,'unansweredandreview'),\n        }\n        setStartexam(true);\n        history.replace(\"/startexam\", examDetails) ;\n      }\n    }\n    else\n    {\n      setStartexam(false);\n    }\n  //----------------------------------------------------------------------------\n}\n\nasync function startMyExam(exam)\n{\n  const ExamId = exam.id;\n\n  const res = await API.put('/exam/'+ExamId,{\"status\": \"start\"});\n\n  if(res.data.status === 'success')\n  {\n    return 1;\n  }\n  else\n  {\n    return 0;\n  }\n}\n\nasync function getQuestions(exam)\n{\n  const ExamId = exam.id;\n\n  const res = await API.get('/answer',{params: {\"exam_id\": ExamId}});\n  if(res.data.status === 'success')\n  {\n    return res.data.data;\n  }\n  else\n  {\n    return null;\n  }\n}\n\nfunction getIndexes(myQuestions,searchString)\n{\n  let arr     = [];\n\n  myQuestions.forEach(function(question,index){\n    if(question.answered === searchString)\n    {\n      arr.push(index);\n    }\n  });\n  return arr;\n}\n\nexport default Instructions;\n","import React from 'react';\nimport MathJax from 'react-mathjax-preview';\n\nfunction Options(props) {\n    const projpath                =   process.env.REACT_APP_PROJPATH;\n    let opt                       =   '';\n    let optType                   =   '';\n    let optImg                    =   '';\n    let opt_path                  =   '';\n\n    const questionIndex           =   props.data.questions.location.state.currentQuestionIndex;\n    const selectedOptions         =   props.selectedOptions;\n\n    if(props.opt)\n    {\n      opt                         =   props.opt.split(':$:')[0];\n      optType                     =   props.opt.split(':$:')[1];\n    }\n    if(props.optimage)\n    {\n       optImg                      =   props.optimage.split(':$:')[0];\n       optType                     =   props.optimage.split(':$:')[1];\n       opt_path                    =   projpath+\"\"+optImg;\n    }\n\n    return (\n          <div className=\"col-lg-12 row\">\n            <div className=\"col-lg-1\">\n              <input checked={verifyOption(questionIndex, selectedOptions, optType)} type=\"radio\" name=\"option\"  value={optType} onChange={() => {\n              props.setMyOption(optType);\n            }} />\n            </div>\n            <div className=\"col-lg-11\">\n              <MathJax math={opt} />\n            </div>\n            <img src={opt_path} alt=\"\"/>\n          </div>\n    );\n}\n\nfunction verifyOption(questionIndex, selectedOptions, optType){\n  return selectedOptions[questionIndex] === optType;\n}\n\nexport default Options;\n","import React from 'react';\nimport Options from \"./Options\";\nimport MathJax from 'react-mathjax-preview';\n\nfunction QuestionAnswer(props) {\n  const questions     = props.questions.location.state.questions;\n  const index         = props.questions.location.state.currentQuestionIndex;\n\n  //console.log(stdanswer);\n  //------------------------------Question Variables----------------------------\n  let  question       =   '';\n  const projpath      =   process.env.REACT_APP_PROJPATH;\n  let question_path   =  '';\n  //----------------------------------------------------------------------------\n\n  if(!questions[index].question.qu_fig)\n  {\n    question = questions[index].question.question;\n  }\n  else\n  {\n    question = questions[index].question.question;\n    question_path = projpath+\"\"+questions[index].question.qu_fig;\n  }\n\n  return (\n          <div className=\"col-lg-12 row\">\n            <div className=\"col-lg-12\">\n              <b>Question {questions[index].qnid_sr}:</b>\n            </div>\n            <div className=\"col-lg-12\" style={{height:\"200px\", overflow:\"auto\"}}>\n                <MathJax math={question} />\n                <br/>\n              <img src={question_path} alt=\"\"/>\n            </div>\n\n            <div className=\"col-lg-12\">\n              <hr/>\n            </div>\n\n            <div className=\"col-lg-12\" style={{height:\"190px\", overflow:\"auto\"}}>\n\n              <Options id=\"optiona\" opt={questions[index].question.optiona} optimage={questions[index].question.a1} qu={questions[index]} setMyOption={props.setMyOption} data={props} selectedOptions={props.selectedOptions} />\n\n              <Options id=\"optionb\" opt={questions[index].question.optionb} optimage={questions[index].question.a2} qu={questions[index]} setMyOption={props.setMyOption} data={props} selectedOptions={props.selectedOptions} />\n\n              <Options id=\"optionc\" opt={questions[index].question.optionc} optimage={questions[index].question.a3} qu={questions[index]} setMyOption={props.setMyOption} data={props} selectedOptions={props.selectedOptions} />\n\n              <Options id=\"optiond\" opt={questions[index].question.optiond} optimage={questions[index].question.a4} qu={questions[index]} setMyOption={props.setMyOption} data={props} selectedOptions={props.selectedOptions} />\n\n            </div>\n          </div>\n  );\n}\n\nexport default QuestionAnswer;\n","import React from 'react';\nimport { useHistory } from 'react-router-dom';\n\nfunction QuestionButtons(props) {\n  const qas           = props.qas.location.state.questions;\n  const myIndex       = props.qas.location.state.currentQuestionIndex;\n  let history         =   useHistory();\n        return (\n          <div className=\"col-lg-12\" style={{float: \"right\"}}>\n              <div className='card col-lg-12'>\n                  <div className=\"card-header bg-primary row\" style={{color:\"white\"}}>\n                    <div className=\"col-lg-12\">\n                      <h6><b><center>Questions</center></b></h6>\n                    </div>\n                  </div>\n                  <div className=\"card-body col-lg-12 row\" style={{float:\"right\" ,width:\"350px\"}}>\n                    {qas.map((qa,index) => (\n                      <div className=\"col-lg-2\" key={qa.qnid_sr} style={{margin:\"2px\"}}>\n\n                          <input type=\"button\" className={getColor(index,myIndex,qa)} value={qa.qnid_sr}  style={{margin:\"2px\"}} onClick={() => {changeIndex(props,index,history)}}/>\n\n                      </div>\n                    ))}\n                  </div>\n              </div>\n            </div>\n        );\n}\n\nfunction changeIndex(props,index,history)\n{\n  const examDetailsButtons = {\n    exam                               :  props.qas.location.state.exam,\n    questions                          :  props.qas.location.state.questions,\n    currentQuestionIndex               :  index,\n    solvedQuestionIndexes              :  props.qas.location.state.solvedQuestionIndexes, unsolvedQuestionIndexes            :  props.qas.location.state.unsolvedQuestionIndexes,\n    markedSolvedIndexes                :  props.qas.location.state.markedSolvedIndexes,\n    markedUnsolvedIndexes              :  props.qas.location.state.markedUnsolvedIndexes\n  }\n  history.replace(\"/startexam\", examDetailsButtons) ;\n}\n\nfunction getColor(index,myIndex,qa)\n{\n    if(index === myIndex) {return \"btn btn-sm btn-danger\";}\n    switch (qa.answered) {\n      case \"unanswered\"         : return \"btn btn-sm btn-outline-dark\";\n      case \"answered\"           : return \"btn btn-sm btn-success\";\n      case \"answeredandreview\"  : return \"btn btn-sm btn-primary\";\n      default                   : return \"btn btn-sm btn-warning\";\n    }\n}\n\nexport default QuestionButtons;\n","import React, { useState, useEffect, useContext } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport API from '../../api';\nimport {ShowContext} from '../../App';\n\nfunction NextSaveButton(props) {\n        const {setShow,setMsg} = useContext(ShowContext);\n\n        const [islast, setIslast]   = useState(false)\n        const myIndex               = parseInt(props.data.location.state.currentQuestionIndex);\n        let history                 = useHistory();\n        const maxQuestions          = parseInt(props.data.location.state.questions.length);\n\n        useEffect(() =>\n        {\n          myIndex < (maxQuestions) ? setIslast(false) : setIslast(true);\n        },[myIndex,maxQuestions]);\n\n        console.log('myOption', props.myOption);\n        return (\n            <div className=\"col-lg-3\">\n                <button className=\"btn btn-primary\"\n                onClick={() => {\n                  saveAndChangeIndex(props,(myIndex+1),history,maxQuestions,props.myOption,setShow,setMsg)\n                }}\n                disabled={islast}>Save & Next</button>\n            </div>\n        );\n}\n\nasync function saveAndChangeIndex(props,index,history,maxQuestions,myOption,setShow,setMsg)\n{\n  let myQuestions           = props.data.location.state.questions;\n  const myIndex             = (index-1);\n  const curOptionStatus     = myQuestions[myIndex].answered;\n  const answerId            = myQuestions[myIndex].id;\n  let newOptionStatus       = '';\n\n  let myUnsolvedQuestionIndexes   =  props.data.location.state.unsolvedQuestionIndexes;\n  let mySolvedQuestionIndexes     =  props.data.location.state.solvedQuestionIndexes;\n  let myMarkedUnsolvedIndexes     =  props.data.location.state.markedUnsolvedIndexes;\n  let myMarkedSolvedIndexes       =  props.data.location.state.markedSolvedIndexes;\n\n  //-----------------------Find new option status2---------------------------\n    if(curOptionStatus === 'unanswered'){\n      newOptionStatus = 'answered';\n    }\n    else if(curOptionStatus === 'unansweredandreview'){\n      newOptionStatus = 'answeredandreview';\n    }\n    else {\n      newOptionStatus = curOptionStatus;\n    }\n    //-----------------------------------------------------------------\n\n  if(myOption !== undefined && myOption !== null)\n  {\n    //-----------------------Send Data to Server--------------------------------\n    const ExamId = props.data.location.state.exam.id;\n    await API.put('/answer/'+answerId,{\"type\":\"saveanswer\",\"answered\": newOptionStatus, \"stdanswer\": myOption, \"answer_by\": ExamId})\n    .then(res =>\n     {\n         if(res.data.status === 'success')\n         {\n           //-----------------------Save Data to Local Array---------------------------\n             if(curOptionStatus === 'unanswered'){\n               newOptionStatus = 'answered';\n               myQuestions[myIndex].answered = newOptionStatus;\n               myUnsolvedQuestionIndexes = myUnsolvedQuestionIndexes.filter(item => item !== myIndex);\n               mySolvedQuestionIndexes.push(myIndex);\n               myUnsolvedQuestionIndexes.sort();\n               mySolvedQuestionIndexes.sort();\n             }\n             else if(curOptionStatus === 'unansweredandreview'){\n               newOptionStatus = 'answeredandreview';\n               myQuestions[myIndex].answered = newOptionStatus;\n               myMarkedUnsolvedIndexes = myMarkedUnsolvedIndexes.filter(item => item !== myIndex);\n               myMarkedSolvedIndexes.push(myIndex);\n               myMarkedUnsolvedIndexes.sort();\n               myMarkedSolvedIndexes.sort();\n             }\n             else {\n               newOptionStatus = curOptionStatus;\n             }\n             //-----------------------------------------------------------------\n\n             if(index < maxQuestions)\n             {\n               const examDetailsButtons = {\n                 exam                               :  props.data.location.state.exam,\n                 questions                          :  myQuestions,\n                 currentQuestionIndex               :  myIndex+1,\n                 solvedQuestionIndexes              :  mySolvedQuestionIndexes, unsolvedQuestionIndexes            :  myUnsolvedQuestionIndexes,\n                 markedSolvedIndexes                :  myMarkedSolvedIndexes,\n                 markedUnsolvedIndexes              :  myMarkedUnsolvedIndexes\n               }\n               props.setMyOption(undefined);\n               history.replace(\"/startexam\", examDetailsButtons) ;\n             }\n         }\n     })\n    .catch(error =>\n     {\n       if(error.response.status !== 429)\n       {\n           let examDetails = {};\n           const myQuestions = getQuestions(props.data.location.state.exam);\n           if(myQuestions)\n           {\n             examDetails = {\n             exam                               :  props.data.location.state.exam,\n             questions                          :  myQuestions,\n             currentQuestionIndex               :  myIndex,\n             solvedQuestionIndexes              :  getIndexes(myQuestions,'answered'), unsolvedQuestionIndexes            :  getIndexes(myQuestions,'unanswered'),\n             markedSolvedIndexes                :  getIndexes(myQuestions,'answeredandreview'),\n             markedUnsolvedIndexes              :  getIndexes(myQuestions,'unansweredandreview'),\n             }\n             props.setMyOption(undefined);\n             history.replace(\"/startexam\", examDetails) ;\n           }\n        }\n        else\n        {\n           setShow(true);\n           setMsg('Server is Busy. Please wait for some Seconds...');\n           if(index < maxQuestions)\n           {\n             const examDetailsButtons = {\n             exam                               :  props.data.location.state.exam,\n             questions                          :  props.data.location.state.questions,\n             currentQuestionIndex               :  myIndex,\n             solvedQuestionIndexes              :  props.data.location.state.solvedQuestionIndexes, unsolvedQuestionIndexes            :  props.data.location.state.unsolvedQuestionIndexes,\n             markedSolvedIndexes                :  props.data.location.state.markedSolvedIndexes,\n             markedUnsolvedIndexes              :  props.data.location.state.markedUnsolvedIndexes,\n             }\n             props.setMyOption(undefined);\n             history.replace(\"/startexam\", examDetailsButtons) ;\n           }\n        }\n     });\n    //--------------------------------------------------------------------------\n  }\n  else\n  {\n    if(index < maxQuestions)\n    {\n      const examDetailsButtons = {\n      exam                               :  props.data.location.state.exam,\n      questions                          :  props.data.location.state.questions,\n      currentQuestionIndex               :  myIndex+1,\n      solvedQuestionIndexes              :  props.data.location.state.solvedQuestionIndexes, unsolvedQuestionIndexes            :  props.data.location.state.unsolvedQuestionIndexes,\n      markedSolvedIndexes                :  props.data.location.state.markedSolvedIndexes,\n      markedUnsolvedIndexes              :  props.data.location.state.markedUnsolvedIndexes,\n      }\n      props.setMyOption(undefined);\n      history.replace(\"/startexam\", examDetailsButtons) ;\n    }\n  }\n}\n\n\nasync function getQuestions(exam)\n{\n  const ExamId = exam.id;\n  const res = await API.get('/answer',{params: {\"exam_id\": ExamId}});\n\n  if(res.data.status === 'success')\n  {\n    return res.data.data;\n  }\n  else\n  {\n    return null;\n  }\n}\n\nfunction getIndexes(myQuestions,searchString)\n{\n  let arr     = [];\n  myQuestions.forEach(function(question,index){\n    if(question.answered === searchString)\n    {\n      arr.push(index);\n    }\n  });\n  return arr;\n}\n\nexport default NextSaveButton;\n","import React from 'react';\n\nfunction OverallSummery(props) {\n        return (\n          <div className=\"col-lg-12\" style={{float:\"right\",marginTop:\"10px\"}}>\n              <div className='card col-lg-12'>\n                  <div className=\"card-header bg-primary row\" style={{color:\"white\"}}>\n                    <div className=\"col-lg-12\">\n                      <h6><b><center>Overall Exam Summery</center></b></h6>\n                    </div>\n                  </div>\n                  <div className=\"card-body col-lg-12 row\" style={{float:\"right\" ,width:\"350px\"}}>\n\n                    <div className=\"col-lg-2\" style={{marginBottom:\"5px\"}}>\n                      <button className=\"btn btn-danger\" style={{height:\"30px\"}}> </button>\n                    </div>\n                    <div className=\"col-lg-10\" style={{fontSize:\"8\"}}>\n                      Current Question\n                    </div>\n                    <div className=\"col-lg-12\">\n                      <hr/>\n                    </div>\n\n                    <div className=\"col-lg-2\" style={{marginBottom:\"5px\"}}>\n                      <button className=\"btn btn-sm btn-success\">{props.data.location.state.solvedQuestionIndexes.length}</button>\n                    </div>\n                    <div className=\"col-lg-10\" style={{fontSize:\"8\"}}>\n                      Attempted\n                    </div>\n\n                    <div className=\"col-lg-2\" style={{marginBottom:\"5px\"}}>\n                      <button className=\"btn btn-sm btn-outline-dark\">{props.data.location.state.unsolvedQuestionIndexes.length}</button>\n                    </div>\n                    <div className=\"col-lg-10\" style={{fontSize:\"8\"}}>\n                      Not Attempted\n                    </div>\n\n                    <div className=\"col-lg-2\" style={{marginBottom:\"5px\"}}>\n                      <button className=\"btn btn-sm btn-primary\">{props.data.location.state.markedSolvedIndexes.length}</button>\n                    </div>\n                    <div className=\"col-lg-10\" style={{fontSize:\"8\"}}>\n                      Attempted and Review\n                    </div>\n\n                    <div className=\"col-lg-2\">\n                      <button className=\"btn btn-sm btn-warning\">{props.data.location.state.markedUnsolvedIndexes.length}</button>\n                    </div>\n                    <div className=\"col-lg-10\" style={{fontSize:\"8\"}}>\n                      Not Attempted and Review\n                    </div>\n                    <div className=\"col-lg-12\">\n                      <hr/>\n                    </div>\n\n                    <div className=\"col-lg-12\">\n                      <h6><b>Total Attempted Questions:{parseInt(props.data.location.state.markedSolvedIndexes.length) + parseInt(props.data.location.state.solvedQuestionIndexes.length)}</b></h6>\n                    </div>\n                  </div>\n              </div>\n            </div>\n        );\n}\n\nexport default OverallSummery;\n","import React, { useState, useEffect } from 'react';\nimport Modal from \"react-bootstrap/Modal\";\nimport Button from \"react-bootstrap/Button\";\nimport OverallSummery from \"./OverallSummery\";\nimport { useHistory } from 'react-router-dom';\nimport API from '../../api';\n\n\nfunction EndExamButton(props) {\n  const [isLast, setIsLast]               = useState(false);\n  const [show, setShow]                   = useState(false);\n  let history                             = useHistory();\n\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n  const index = parseInt(props.index);\n  const length= parseInt(props.length);\n\n  useEffect(() => {\n    index === length-1 ? setIsLast(true):  setIsLast(false);\n  },[index,length]);\n        return (\n          isLast ?\n          <>\n            <div className=\"col-lg-3\">\n              <button className=\"btn btn-warning\" onClick={handleShow}>End Exam</button>\n            </div>\n\n            <Modal show={show} onHide={handleClose} size=\"lg\">\n                <Modal.Body>\n                    <OverallSummery data={props.data}/>\n                    <center>\n                      <h5>Are you sure to End the Exam?</h5>\n                      <Button variant=\"success\" onClick={() => {\n                        handleEndExam(props,history);\n                      }}>Yes</Button> &nbsp;&nbsp;\n                      <Button variant=\"danger\" onClick={handleClose}>No</Button>\n                    </center>\n                </Modal.Body>\n            </Modal>\n          </>\n            : null\n        );\n}\n\nasync function handleEndExam(props,history)\n{\n  const exam      = props.data.location.state.exam;\n  const ExamId    = exam.id;\n\n  const res = await API.put('/exam/'+ExamId,{\"status\": \"end\"});\n  if(res.data.status === 'success')\n  {\n    history.replace(\"/studenthome\");\n  }\n}\n\nexport default EndExamButton;\n","import React, { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nfunction PreviousButton(props) {\n        const [isfirst, setIsfirst]  = useState(false)\n        const myIndex               = parseInt(props.data.location.state.currentQuestionIndex);\n        let history                 = useHistory();\n\n        useEffect(() =>\n        {\n          myIndex === 0 ? setIsfirst(true) : setIsfirst(false);\n        },[props,myIndex]);\n\n        return (\n            <div className=\"col-lg-3\">\n                <button className=\"btn btn-primary\" onClick={() => {props.setMyOption(undefined);\n                  changeIndex(props,(myIndex-1),history)}}\n                disabled={isfirst}>Previous</button>\n            </div>\n        );\n}\n\nfunction changeIndex(props,index,history)\n{\n  if(index >= 0)\n  {\n    const examDetailsButtons = {\n      exam                               :  props.data.location.state.exam,\n      questions                          :  props.data.location.state.questions,\n      currentQuestionIndex               :  index,\n      solvedQuestionIndexes              :  props.data.location.state.solvedQuestionIndexes, unsolvedQuestionIndexes            :  props.data.location.state.unsolvedQuestionIndexes,\n      markedSolvedIndexes                :  props.data.location.state.markedSolvedIndexes,\n      markedUnsolvedIndexes              :  props.data.location.state.markedUnsolvedIndexes\n    }\n    history.replace(\"/startexam\", examDetailsButtons) ;\n  }\n}\n\n\nexport default PreviousButton;\n","import React from 'react';\nimport API from '../../api';\nimport { useHistory } from 'react-router-dom';\n\n\nfunction ReviewLater(props) {\n\n        let myReviewArray     = props.myReviewQuestions;\n        const questionIndex   = props.index;\n        let history           = useHistory();\n        const reviewVal       = myReviewArray[questionIndex];\n\n        return (\n            <div className=\"col-lg-3\">\n              <input type=\"checkbox\" name=\"reviewlater\" checked={reviewVal} onChange={() => {\n                toggleReview(reviewVal,questionIndex,props,history);\n              }}/> To be Reviewed Later\n            </div>\n        );\n}\n\nasync function toggleReview(reviewVal,questionIndex,props,history,setCheckValue,checkValue)\n{\n  let questions = props.data.location.state.questions;\n\n  const origAnswerType = questions[questionIndex].answered;\n  const answerId       = questions[questionIndex].id;\n  let newAnswerType ='unanswered';\n\n  let myUnsolvedQuestionIndexes   =  props.data.location.state.unsolvedQuestionIndexes;\n  let mySolvedQuestionIndexes     =  props.data.location.state.solvedQuestionIndexes;\n  let myMarkedUnsolvedIndexes     =  props.data.location.state.markedUnsolvedIndexes;\n  let myMarkedSolvedIndexes       =  props.data.location.state.markedSolvedIndexes;\n\n\n  if(origAnswerType === 'answered')\n  {\n    newAnswerType = 'answeredandreview';\n\n    mySolvedQuestionIndexes = mySolvedQuestionIndexes.filter(item => item !== questionIndex);\n    myMarkedSolvedIndexes.push(questionIndex);\n\n  }\n  else if(origAnswerType === 'unanswered')\n  {\n    newAnswerType = 'unansweredandreview';\n\n    myUnsolvedQuestionIndexes = myUnsolvedQuestionIndexes.filter(item => item !== questionIndex);\n    myMarkedUnsolvedIndexes.push(questionIndex);\n\n  }\n  else if(origAnswerType === 'answeredandreview')\n  {\n    newAnswerType = 'answered';\n\n    myMarkedSolvedIndexes = myMarkedSolvedIndexes.filter(item => item !== questionIndex);\n    mySolvedQuestionIndexes.push(questionIndex);\n\n  }\n  else if(origAnswerType === 'unansweredandreview')\n  {\n    newAnswerType = 'unanswered';\n\n    myMarkedUnsolvedIndexes = myMarkedUnsolvedIndexes.filter(item => item !== questionIndex);\n    myUnsolvedQuestionIndexes.push(questionIndex);\n\n  }\n  myMarkedUnsolvedIndexes.sort();\n  myMarkedSolvedIndexes.sort();\n  mySolvedQuestionIndexes.sort();\n  myUnsolvedQuestionIndexes.sort();\n\n  questions[questionIndex].answered = newAnswerType;\n  //---------------Update answer to Database------------------------------------\n  await API.put('/answer/'+answerId,{\"type\":\"savereview\",\"answered\": newAnswerType})\n  .then(res =>\n   {\n       if(res.data.status === 'success')\n       {\n         const examDetailsButtons = {\n         exam                               :  props.data.location.state.exam,\n         questions                          :  questions,\n         currentQuestionIndex               :  questionIndex,\n         solvedQuestionIndexes              :  mySolvedQuestionIndexes, unsolvedQuestionIndexes            :  myUnsolvedQuestionIndexes,\n         markedSolvedIndexes                :  myMarkedSolvedIndexes,\n         markedUnsolvedIndexes              :  myMarkedUnsolvedIndexes,\n         }\n         history.replace(\"/startexam\", examDetailsButtons) ;\n       }\n  })\n  .catch(error =>\n  {\n       const examDetailsButtons = {\n       exam                               :  props.data.location.state.exam,\n       questions                          :  props.data.location.state.questions,\n       currentQuestionIndex               :  questionIndex,\n       solvedQuestionIndexes              :  props.data.location.state.solvedQuestionIndexes, unsolvedQuestionIndexes            :  props.data.location.state.unsolvedQuestionIndexes,\n       markedSolvedIndexes                :  props.data.location.state.markedSolvedIndexes,\n       markedUnsolvedIndexes              :  props.data.location.state.markedUnsolvedIndexes,\n       }\n       history.replace(\"/startexam\", examDetailsButtons) ;\n  });\n  //----------------------------------------------------------------------------\n}\n\nexport default ReviewLater;\n","import React ,{ useState, useEffect }  from 'react';\nimport CountdownTimer from \"react-component-countdown-timer\";\nimport { useHistory } from 'react-router-dom';\nimport API from '../../api';\n\nfunction MyTimer(props) {\n        let [timer, setTimer]             =   useState();\n\n        const exam = props.data.location.state.exam;\n        const examId = exam.id;\n        const examDuration = exam.paper.duration;\n        let history                             = useHistory();\n\n        useEffect(() =>\n        {\n                getTimer(setTimer,examId,examDuration);\n                const heartBeatDuration = process.env.REACT_APP_HEART_BEAT_DURATION;\n                //------------Elapsed Time Book Keeping-------------------------------\n                let myInterval = setInterval(() => {\n                    manageExamSession(setTimer,examId,examDuration)\n                }, heartBeatDuration)\n                //--------------------------------------------------------------------\n                //--------------Cleanup Function--------------------------------------\n                return () => {\n                    clearInterval(myInterval);\n                }\n                //--------------------------------------------------------------------\n        },[examId, examDuration]);\n\n        return (\n            timer ? <CountdownTimer count={timer} hideDay size={20} backgroundColor=\"#007bff\" color=\"#ffffff\" onEnd={() => {handleEndExam(props,history);}}/> : null\n        );\n}\n\nasync function handleEndExam(props,history)\n{\n  const exam      = props.data.location.state.exam;\n  const ExamId    = exam.id;\n\n  const res = await API.put('/exam/'+ExamId,{\"status\": \"end\"});\n  if(res.data.status === 'success')\n  {\n    history.replace(\"/studenthome\");\n  }\n}\n\nasync function getTimer(setTimer,examId, examDuration)\n{\n  const duration = examDuration * 60;\n  await API.get('/examSession',{params: {\"exam_id\": examId}})\n  .then((res) => {\n    const timerData = res.data;\n    setTimer(duration - timerData.elapsedTime);\n  })\n  .catch((error) =>\n  {\n    console.log(error.response.status);\n  });\n}\n\nasync function manageExamSession(setTimer,examId, examDuration)\n{\n  const duration = examDuration * 60;\n  await API.put('/examSession',{\"exam_id\": examId})\n  .then((res) => {\n    const timerData = res.data;\n    setTimer(duration - timerData.elapsedTime);\n  })\n  .catch((error) =>\n  {\n    console.log(error.response.status);\n  });\n}\n\n\nexport default MyTimer;\n","import React ,{ useState, useEffect, useContext }  from 'react';\nimport QuestionAnswer from \"./Exam/QuestionAnswer\";\nimport QuestionButtons from \"./Exam/QuestionButtons\";\nimport NextSaveButton from \"./Exam/NextSaveButton\";\nimport EndExamButton from \"./Exam/EndExamButton\";\nimport PreviousButton from \"./Exam/PreviousButton\";\nimport OverallSummery from \"./Exam/OverallSummery\";\nimport ReviewLater from \"./Exam/ReviewLater\";\nimport MyTimer from \"./Exam/MyTimer.js\";\nimport { useHistory } from 'react-router-dom';\nimport API from '../api';\nimport {ShowContext} from '../App';\n\nfunction Startexam(props)\n{\n  const {setShow,setMsg} = useContext(ShowContext);\n  let history                         =   useHistory();\n\n  let [myOption, setMyOption]          = useState();\n  if(props.location.state)\n  {\n    var originalSelectedOptions        = getSelectedOptions(props.location.state.questions);\n    var questionIndex                  = props.location.state.currentQuestionIndex;\n    var myReviewArray                  = getReviewOptions(props.location.state.questions);\n  }\n\n  let [selectedOptions, setSelectedOptions] = useState(originalSelectedOptions);\n\n  useEffect(() => {\n    if(myOption)\n    {\n      setSelectedOptions(prev => {\n        return {...prev, [questionIndex]: myOption}\n      });\n    }\n  }, [myOption]);\n\n  useEffect(() =>\n  {\n    window.addEventListener('blur', onBlur);\n    window.myParameter    = props;\n    window.setShow        = setShow;\n    window.setMsg         = setMsg;\n    window.myHistory      = history;\n    return () =>\n    {\n      window.removeEventListener('blur', onBlur);\n      window.myParameter    = '';\n      window.setShow        = '';\n      window.setMsg         = '';\n      window.myHistory      = '';\n    };\n  });\n\n  return (\n    props.location.state ?\n      <div className=\"row\">\n          <div className='card col-lg-12'>\n              <div className=\"card-header bg-primary row\" style={{color:\"white\"}}>\n                <div className=\"col-lg-8\">\n                  <h5><b>Exam Name: {props.location.state.exam.paper.paper_name}</b></h5>\n                </div>\n                <div className=\"col-lg-4\">\n                      <i className=\"fas fa-clock fa-lg\"></i> &nbsp;&nbsp;\n                      <MyTimer data={props} />\n                </div>\n              </div>\n          </div>\n\n          <div className=\"card col-lg-8\">\n            <div className=\"card-body\">\n              <QuestionAnswer questions={props} setMyOption={setMyOption}  selectedOptions={selectedOptions}/>\n              <hr/>\n              <div className=\"col-lg-12 row\">\n                <PreviousButton data={props} setMyOption={setMyOption}/>\n                <NextSaveButton data={props} myOption={myOption} setMyOption={setMyOption}/>\n                <EndExamButton index={questionIndex} length={props.location.state.questions.length} data={props}/>\n                <ReviewLater data={props} myReviewQuestions={myReviewArray} index={questionIndex}/>\n              </div>\n            </div>\n          </div>\n          <div className=\"col-lg-4\" style={{float: \"right\"}}>\n            <QuestionButtons qas={props}/>\n            <OverallSummery data={props}/>\n          </div>\n      </div> : null\n  );\n}\n\nconst onBlur = async (evt) =>\n{\n  const exam                    = evt.currentTarget.myParameter.location.state.exam;\n  const total_allowable_alerts  = evt.currentTarget.myParameter.location.state.exam.paper.exam_switch_alerts;\n  let history                   = evt.currentTarget.myHistory;\n\n  const ExamId                  = exam.id;\n  const setShow                 = evt.currentTarget.setShow;\n  const setMsg                  = evt.currentTarget.setMsg;\n\n  await API.put('/exam/'+ExamId,{\"status\": \"windowswitch\"})\n  .then((res) => {\n    if(res.data.status === 'success')\n    {\n      if(parseInt(res.data.switchedcount) === parseInt(total_allowable_alerts))\n      {\n          //---------------end Examination-----------------------------------\n          handleEndExam(exam,history,setShow,setMsg,res.data.switchedcount);\n          //-----------------------------------------------------------------\n      }\n      else if(parseInt(res.data.switchedcount)+ 5 === parseInt(total_allowable_alerts))\n      {\n        alert('Your Window switching limit is about to expire. Continuing switching window now will end your Examination abruptly.');\n      }\n      else\n      {\n        alert('Please do not switch window while exam is in progress. This Event will be Recorded.');\n      }\n    }\n  })\n  .catch((error) =>\n  {\n    alert('Please do not switch window while exam is in progress.');\n  });\n};\n\nasync function handleEndExam(exam,history,setShow,setMsg,cnt)\n{\n  const ExamId    = exam.id;\n\n  await API.put('/exam/'+ExamId,{\"status\": \"end\"})\n  .then((res) => {\n    if(res.data.status === 'success')\n    {\n      setShow(true);\n      setMsg('Your Examination is Ended abruptly because you switched window '+cnt+' times.');\n      history.replace(\"/studenthome\");\n    }\n  })\n  .catch((error) =>\n  {\n    alert('Please do not switch window while exam is in progress.');\n  });\n}\n\n\nfunction getSelectedOptions(questions)\n{\n  let originalSelectedOptions = {};\n  questions.map((question,index) =>\n  {\n    originalSelectedOptions[index] = question.stdanswer\n  });\n  return originalSelectedOptions;\n}\n\nfunction getReviewOptions(questions)\n{\n  let array = [];\n  questions.map((question,index) =>\n  {\n      if(question.answered.indexOf('review') >= 0)\n      {\n        array[index] = true;\n      }\n      else\n      {\n        array[index] = false;\n      }\n  });\n  return array;\n}\n\nexport default Startexam;\n","import React from 'react';\nimport { Route } from 'react-router-dom';\nimport Sidebar from './Sidebar';\nimport Footer from './Footer';\nimport Home from './MyContent';\nimport Login from '../Components/Login';\nimport StudHome from '../Components/Student/StudHome';\nimport Instructions from '../Components/Student/Instructions';\nimport Startexam from '../Components/Startexam';\n\nfunction Content() {\n        return (\n                <div id=\"layoutSidenav\">\n                    <div id=\"layoutSidenav_nav\"><Sidebar /></div>\n                    <div id=\"layoutSidenav_content\">\n                        <main>\n                            <Route exact path=\"/\" component={Home} />\n                            <Route exact path=\"/login\" component={Login} />\n                            <Route exact path=\"/studenthome\" component={StudHome} />\n                            <Route exact path=\"/instructions\" component={Instructions} />\n                            <Route exact path=\"/startexam\" component={Startexam} />\n                        </main>\n                        <footer className=\"py-4 bg-light mt-auto\">\n                            <Footer />\n                        </footer>\n                    </div>\n                </div>\n        );\n}\n\nexport default Content;\n","import React from 'react';\nimport Alert from \"react-bootstrap/Alert\";\n\nfunction AlertDismissible(props)\n{\n  return (\n    props.myShow && props.myMsg ?\n      <Alert\n        variant={\"dark\"}\n        onClose={() => props.mySetShow(false)}\n        dismissible\n        style={{position:\"fixed\",top:\"83%\",width:\"58%\",left:\"22%\",zIndex:\"99999\"}}\n        >\n        {props.myMsg}\n      </Alert> : null\n  );\n}\n\nexport default AlertDismissible;\n","import React, { useState } from 'react';\nimport Header from './Layout/Header';\nimport Content from './Layout/Content';\nimport AlertDismissible from './AlertDismissible';\nimport { createBrowserHistory } from 'history'\nimport { Router } from 'react-router-dom';\nimport API from './api';\n\nexport const ShowContext = React.createContext();\nconst browserHistory = createBrowserHistory({});\n\n\n//----------------------Axios Interceptors--------------------------------------\nfunction setupAxios(setShow, setMsg) {\n  API.interceptors.request.use(function (config)\n  {\n    if(browserHistory.location.pathname !== '/')\n    {\n      const token = JSON.parse(localStorage.getItem(\"token\"));\n      if (token)\n      {\n        config.headers['Authorization'] = 'Bearer ' + token;\n      }\n    }\n    return config;\n  },\n  function (error)\n  {\n      return Promise.reject(error);\n  });\n\n\n  API.interceptors.response.use(response => response,\n    error =>\n    {\n      const {status} = error.response;\n      if (status === 401)\n        browserHistory.replace('/login');\n      else if (status === 429){\n          setShow(true);\n          setMsg('Server is Busy. Please wait for some seconds...');\n      }\n      return Promise.reject(error);\n    }\n  );\n}\n//----------------------------End of Axios Interceptors-------------------------\n\n\nfunction App()\n{\n    const [show, setShow] = useState(false);\n    const [msg, setMsg]   = useState();\n    setupAxios(setShow, setMsg);\n    return (\n      <div>\n      <Router history={browserHistory}>\n        <ShowContext.Provider value={{setShow:setShow,setMsg:setMsg}}>\n          <Header/>\n          <Content/>\n        </ShowContext.Provider>\n        <AlertDismissible myShow={show} mySetShow={setShow} myMsg={msg}/>\n        </Router>\n      </div>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n      <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}